{"ast":null,"code":"var _jsxFileName = \"/Users/csoutter/Documents/COMP 580/escape580/escape580/src/components/appView.js\";\nimport React, { useState, useLayoutEffect } from 'react';\nimport { Entrance } from './entrance';\nimport { Landing } from './landing';\nimport { DevilsSnare } from './devilsSnare';\nimport { Sphinx } from './sphinx';\nimport { Prophecy } from \"./prophecy\";\nimport { Ending } from \"./ending\";\nimport { Boggart } from './boggart';\nexport function AppView(props) {\n  const [view, setView] = useState('enter');\n  const [viewDisplay, setDisplay] = useState(React.createElement(Entrance, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n\n  const handleViewChange = view => {\n    setView(view);\n  };\n\n  const handleExitClick = () => {\n    setView('landing');\n  };\n\n  useLayoutEffect(() => {\n    switch (view) {\n      case 'enter':\n        setDisplay(React.createElement(Entrance, {\n          background: \"url('../images/harry_in_maze.jpg')\",\n          handleViewChange: handleViewChange,\n          exit: handleExitClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }));\n        break;\n\n      case 'landing':\n        setDisplay(React.createElement(Landing, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }));\n        break;\n\n      case 'level-one':\n        //future implementations: call randomization function here to determine\n        //which component will be displayed\n        setDisplay(React.createElement(DevilsSnare, {\n          background: \"url('../images/devilsSnare.jpg')\",\n          exit: handleExitClick,\n          handleViewChange: handleViewChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }));\n        break;\n\n      case 'level-three':\n        setDisplay(React.createElement(Boggart, {\n          background: \"url('../images/boggart.jpg')\",\n          exit: handleExitClick,\n          handleViewChange: handleViewChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n        break;\n\n      case 'level-four':\n        setDisplay(React.createElement(Sphinx, {\n          background: \"url('../images/Sphinx.png')\",\n          exit: handleExitClick,\n          handleViewChange: handleViewChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n        break;\n\n      case 'level-five':\n        setDisplay(React.createElement(Prophecy, {\n          background: \"url('../images/prophecy.png')\",\n          exit: handleExitClick,\n          handleViewChange: handleViewChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n        break;\n\n      case 'ending':\n        setDisplay(React.createElement(Ending, {\n          background: \"url('../images/prophecy.png')\",\n          exit: handleExitClick,\n          handleViewChange: handleViewChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }));\n        break;\n\n      default:\n        setDisplay(React.createElement(Entrance, {\n          background: \"url('../images/harry_in_maze.jpg')\",\n          handleViewChange: handleViewChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }));\n    }\n  }, [view]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, viewDisplay);\n}","map":{"version":3,"sources":["/Users/csoutter/Documents/COMP 580/escape580/escape580/src/components/appView.js"],"names":["React","useState","useLayoutEffect","Entrance","Landing","DevilsSnare","Sphinx","Prophecy","Ending","Boggart","AppView","props","view","setView","viewDisplay","setDisplay","handleViewChange","handleExitClick"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport {Entrance} from './entrance';\nimport {Landing} from './landing';\nimport {DevilsSnare} from './devilsSnare';\nimport { Sphinx } from './sphinx';\nimport {Prophecy } from \"./prophecy\";\nimport {Ending} from \"./ending\";\nimport { Boggart } from './boggart';\n\n\nexport function AppView(props){\n\n    const[view, setView] = useState('enter');\n    const[viewDisplay, setDisplay] = useState(<Entrance/>);\n\n    const handleViewChange = (view) => {\n        setView(view);\n    };\n\n    const handleExitClick = () => {\n            setView('landing');\n        }\n\n    useLayoutEffect(() => {\n          switch(view) {\n            case 'enter':\n            setDisplay(\n            <Entrance\n            background=\"url('../images/harry_in_maze.jpg')\"\n            handleViewChange={handleViewChange}\n            exit={handleExitClick}\n            />\n            );\n            break;\n            case 'landing':\n            setDisplay(\n            <Landing/>\n            );\n            break;\n            case 'level-one':\n            //future implementations: call randomization function here to determine\n            //which component will be displayed\n           setDisplay(\n            <DevilsSnare\n            background=\"url('../images/devilsSnare.jpg')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'level-three':\n                setDisplay(\n                    <Boggart\n                    background=\"url('../images/boggart.jpg')\"\n                    exit={handleExitClick}\n                    handleViewChange={handleViewChange}\n                    />\n                );\n                break;\n            case 'level-four':\n           setDisplay(\n            <Sphinx\n            background=\"url('../images/Sphinx.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'level-five':\n           setDisplay(\n            <Prophecy\n            background=\"url('../images/prophecy.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'ending':\n           setDisplay(\n            <Ending\n            background=\"url('../images/prophecy.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            default:\n            setDisplay(\n            <Entrance background=\"url('../images/harry_in_maze.jpg')\" handleViewChange={handleViewChange}/>\n            );\n          }\n       }, [view]);\n\n    return (\n    <React.Fragment>\n        {viewDisplay}\n    </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}