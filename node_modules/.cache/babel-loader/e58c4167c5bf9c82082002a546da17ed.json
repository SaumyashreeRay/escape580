{"ast":null,"code":"var _jsxFileName = \"/Users/csoutter/Documents/COMP 580/escape580/escape580/src/components/boggart.js\";\nimport React, { useLayoutEffect, useEffect, useCallback } from 'react';\nimport Sound from 'react-sound';\nimport boggartInstructions from '../audio/level3.m4a';\nimport rattling from \"../audio/rattling.mp3\";\n\nfunction RenderReply(props) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: props.reply,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}\n\nexport function Boggart(props) {\n  const handleExitClick = () => {\n    props.exit();\n  };\n\n  const intro = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: rattling,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: boggartInstructions,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: true,\n    volume: 75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n  const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n  const [sound, setSound] = useState(intro);\n  const [correct, setCorrect] = useState(false);\n  const tickle = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: rain_spell,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: rain_sound,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n  const explosion_comp = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: explosion_spell,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: explosion,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n  const sunlight = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: sunlight_spell,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n  const scream = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: scream_spell,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: scream_sound,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n\n  const handleTickle = () => {\n    console.log(document.activeElement.id);\n    setSound(React.createElement(RenderReply, {\n      reply: rain_reply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  };\n\n  const handleDancing = () => {\n    setSound(React.createElement(RenderReply, {\n      reply: explosion_reply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  };\n\n  const finishedLevel = () => {\n    handleViewChange('level-two');\n  };\n\n  const handleFunny = () => {\n    setSound(React.createElement(Sound, {\n      url: sunlight_reply,\n      playStatus: Sound.status.PLAYING,\n      autoLoad: true,\n      loop: false,\n      volume: 100,\n      onFinishedPlaying: finishedLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  };\n\n  const handleTorture = () => {\n    setSound(React.createElement(RenderReply, {\n      reply: scream_reply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  };\n\n  const handleSpace = () => {\n    let id = console.log(document.activeElement.id);\n\n    switch (id) {\n      case \"tickle\":\n        handleTickle();\n        break;\n\n      case \"funny\":\n        handleFunny();\n        break;\n\n      case \"dancing\":\n        handleDancing();\n        break;\n\n      case \"torture\":\n        handleTorture();\n        break;\n    }\n  };\n\n  const handleSelect = name => {\n    console.log(name);\n\n    switch (name) {\n      case -1:\n        setSound(tickle);\n        break;\n\n      case 1:\n        setSound(funny);\n        break;\n\n      case 2:\n        setSound(dancing);\n        break;\n\n      case 3:\n        setSound(torture);\n        break;\n    }\n  };\n\n  const handleKey = useCallback(e => {\n    var event = window.event ? window.event : e;\n    console.log(event);\n\n    switch (e.key) {\n      case \"Tab\":\n        handleSelect(document.activeElement.tabIndex);\n        break;\n\n      case \" \":\n        handleSpace();\n        break;\n\n      case \"Escape\":\n        props.exit();\n    }\n  }, [props]);\n  useLayoutEffect(() => {\n    document.addEventListener(\"keydown\", handleKey);\n    return function cleanup() {\n      document.removeEventListener(\"keydown\", handleKey);\n    };\n  });\n  return React.createElement(\"div\", {\n    id: \"boggart-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"d-landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"h\", {\n    id: \"h-entrance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Welcome to level three!\"), React.createElement(\"p\", {\n    id: \"p-landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Ah, you have encountered the boggart, a very mysterious creature! This creature knows all of your deepest, darkest fears and transforms into the thing that you are most afraid of. There is a special spell that you must use in order to defeat the boggart. Let\\u2019s see if you can figure out what spell to use\\u2026\"), React.createElement(\"div\", {\n    id: \"d-options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"tickle\",\n    tabIndex: \"1\",\n    onClick: handleTickle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \" Tickle Spell \"), React.createElement(\"button\", {\n    tabIndex: \"2\",\n    id: \"funny\",\n    onClick: handleFunny,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Funny Spell\"), React.createElement(\"button\", {\n    tabIndex: \"3\",\n    id: \"sunlight\",\n    onClick: handleSunlight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Sunlight Spell\"), React.createElement(\"button\", {\n    tabIndex: \"4\",\n    id: \"scream\",\n    onClick: handleScream,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Scream Spell\")), sound, React.createElement(\"div\", {\n    id: \"d-button-holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"b-landing\",\n    onClick: handleExitClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Exit Maze\"))));\n}","map":{"version":3,"sources":["/Users/csoutter/Documents/COMP 580/escape580/escape580/src/components/boggart.js"],"names":["React","useLayoutEffect","useEffect","useCallback","Sound","boggartInstructions","rattling","RenderReply","props","reply","status","PLAYING","Boggart","handleExitClick","exit","intro","handleViewChange","undefined","sound","setSound","useState","correct","setCorrect","tickle","rain_spell","rain_sound","explosion_comp","explosion_spell","explosion","sunlight","sunlight_spell","scream","scream_spell","scream_sound","handleTickle","console","log","document","activeElement","id","rain_reply","handleDancing","explosion_reply","finishedLevel","handleFunny","sunlight_reply","handleTorture","scream_reply","handleSpace","handleSelect","name","funny","dancing","torture","handleKey","e","event","window","key","tabIndex","addEventListener","cleanup","removeEventListener","handleSunlight","handleScream"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,eAAf,EAAgCC,SAAhC,EAA2CC,WAA3C,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,mBAAP,MAAgC,qBAAhC;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,KADb;AAEE,IAAA,UAAU,EAAEL,KAAK,CAACM,MAAN,CAAaC,OAF3B;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,IAAI,EAAE,KAJR;AAKE,IAAA,MAAM,EAAE,GALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADJ;AAWH;;AAED,OAAO,SAASC,OAAT,CAAiBJ,KAAjB,EAAwB;AAE3B,QAAMK,eAAe,GAAG,MAAM;AAC1BL,IAAAA,KAAK,CAACM,IAAN;AACH,GAFD;;AAIA,QAAMC,KAAK,GAAG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACZ,oBAAC,KAAD;AACG,IAAA,GAAG,EAAET,QADR;AAEG,IAAA,UAAU,EAAEF,KAAK,CAACM,MAAN,CAAaC,OAF5B;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,IAAI,EAAE,KAJT;AAKG,IAAA,MAAM,EAAE,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,EAQV,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEN,mBADP;AAEE,IAAA,UAAU,EAAED,KAAK,CAACM,MAAN,CAAaC,OAF3B;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,IAAI,EAAE,IAJR;AAKC,IAAA,MAAM,EAAE,EALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARU,CAAd;AAiBA,QAAMK,gBAAgB,GAAGR,KAAK,CAACQ,gBAAN,KAA2BC,SAA3B,GAAuC,IAAvC,GAA8CT,KAAK,CAACQ,gBAA7E;AAEA,QAAK,CAACE,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAACL,KAAD,CAAjC;AACA,QAAK,CAACM,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,KAAD,CAArC;AAEA,QAAMG,MAAM,GAAG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACe,oBAAC,KAAD;AACG,IAAA,GAAG,EAAEC,UADR;AAEG,IAAA,UAAU,EAAEpB,KAAK,CAACM,MAAN,CAAaC,OAF5B;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,IAAI,EAAE,KAJT;AAKG,IAAA,MAAM,EAAE,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,EAOe,oBAAC,KAAD;AACG,IAAA,GAAG,EAAEc,UADR;AAEG,IAAA,UAAU,EAAErB,KAAK,CAACM,MAAN,CAAaC,OAF5B;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,IAAI,EAAE,KAJT;AAKG,IAAA,MAAM,EAAE,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPf,CAAf;AAeA,QAAMe,cAAc,GAAK,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACG,IAAA,GAAG,EAAEC,eADR;AAEG,IAAA,UAAU,EAAEvB,KAAK,CAACM,MAAN,CAAaC,OAF5B;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,IAAI,EAAE,KAJT;AAKG,IAAA,MAAM,EAAE,GALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,KAAD;AACG,IAAA,GAAG,EAAEiB,SADR;AAEG,IAAA,UAAU,EAAExB,KAAK,CAACM,MAAN,CAAaC,OAF5B;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,IAAI,EAAE,KAJT;AAKG,IAAA,MAAM,EAAE,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAAzB;AAeA,QAAMkB,QAAQ,GAAG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACG,IAAA,GAAG,EAAEC,cADR;AAEG,IAAA,UAAU,EAAE1B,KAAK,CAACM,MAAN,CAAaC,OAF5B;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,IAAI,EAAE,KAJT;AAKG,IAAA,MAAM,EAAE,GALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAAjB;AASA,QAAMoB,MAAM,GAAG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,KAAD;AACG,IAAA,GAAG,EAAEC,YADR;AAEG,IAAA,UAAU,EAAE5B,KAAK,CAACM,MAAN,CAAaC,OAF5B;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,IAAI,EAAE,KAJT;AAKG,IAAA,MAAM,EAAE,GALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAOK,oBAAC,KAAD;AACG,IAAA,GAAG,EAAEsB,YADR;AAEG,IAAA,UAAU,EAAE7B,KAAK,CAACM,MAAN,CAAaC,OAF5B;AAGG,IAAA,QAAQ,EAAE,IAHb;AAIG,IAAA,IAAI,EAAE,KAJT;AAKG,IAAA,MAAM,EAAE,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPL,CAAf;;AAeA,QAAMuB,YAAY,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,aAAT,CAAuBC,EAAnC;AACDpB,IAAAA,QAAQ,CAAC,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEqB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAR;AACF,GAHD;;AAKA,QAAMC,aAAa,GAAE,MAAM;AACvBtB,IAAAA,QAAQ,CAAC,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEuB,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxB3B,IAAAA,gBAAgB,CAAC,WAAD,CAAhB;AACH,GAFD;;AAIA,QAAM4B,WAAW,GAAG,MAAM;AACvBzB,IAAAA,QAAQ,CAAC,oBAAC,KAAD;AACE,MAAA,GAAG,EAAE0B,cADP;AAEE,MAAA,UAAU,EAAEzC,KAAK,CAACM,MAAN,CAAaC,OAF3B;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,IAAI,EAAE,KAJR;AAKE,MAAA,MAAM,EAAE,GALV;AAMG,MAAA,iBAAiB,EAAEgC,aANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAR;AAQF,GATD;;AAWA,QAAMG,aAAa,GAAG,MAAM;AACxB3B,IAAAA,QAAQ,CAAC,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE4B,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACvB,QAAIT,EAAE,GAAIJ,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,aAAT,CAAuBC,EAAnC,CAAV;;AACA,YAAOA,EAAP;AACA,WAAK,QAAL;AACEL,QAAAA,YAAY;AACd;;AACA,WAAK,OAAL;AACAU,QAAAA,WAAW;AACX;;AACA,WAAK,SAAL;AACAH,QAAAA,aAAa;AACb;;AACA,WAAK,SAAL;AACAK,QAAAA,aAAa;AACb;AAZA;AAcF,GAhBD;;AAkBA,QAAMG,YAAY,GAAIC,IAAD,IAAU;AAC3Bf,IAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;;AACA,YAAOA,IAAP;AACI,WAAK,CAAC,CAAN;AACA/B,QAAAA,QAAQ,CAACI,MAAD,CAAR;AACA;;AACA,WAAK,CAAL;AACAJ,QAAAA,QAAQ,CAACgC,KAAD,CAAR;AACA;;AACA,WAAK,CAAL;AACAhC,QAAAA,QAAQ,CAACiC,OAAD,CAAR;AACA;;AACA,WAAK,CAAL;AACAjC,QAAAA,QAAQ,CAACkC,OAAD,CAAR;AACA;AAZJ;AAcH,GAhBD;;AAkBE,QAAMC,SAAS,GAAGnD,WAAW,CAAEoD,CAAD,IAAO;AAChC,QAAIC,KAAK,GAAGC,MAAM,CAACD,KAAP,GAAeC,MAAM,CAACD,KAAtB,GAA8BD,CAA1C;AACGpB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ;;AACH,YAAOD,CAAC,CAACG,GAAT;AACA,WAAK,KAAL;AACAT,QAAAA,YAAY,CAACZ,QAAQ,CAACC,aAAT,CAAuBqB,QAAxB,CAAZ;AACA;;AACA,WAAK,GAAL;AACAX,QAAAA,WAAW;AACX;;AACA,WAAK,QAAL;AACAxC,QAAAA,KAAK,CAACM,IAAN;AARA;AAUJ,GAb4B,EAa1B,CAACN,KAAD,CAb0B,CAA7B;AAeDP,EAAAA,eAAe,CAAC,MAAM;AAClBoC,IAAAA,QAAQ,CAACuB,gBAAT,CAA0B,SAA1B,EAAqCN,SAArC;AACM,WAAO,SAASO,OAAT,GAAmB;AAC1BxB,MAAAA,QAAQ,CAACyB,mBAAT,CAA6B,SAA7B,EAAwCR,SAAxC;AACD,KAFC;AAGP,GALY,CAAf;AAQD,SACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACU;AAAG,IAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADV,EAIU;AAAG,IAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mUAJV,EAQU;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAoB,IAAA,QAAQ,EAAG,GAA/B;AAAmC,IAAA,OAAO,EAAEpB,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADL,EAEK;AAAQ,IAAA,QAAQ,EAAC,GAAjB;AAAqB,IAAA,EAAE,EAAC,OAAxB;AAAgC,IAAA,OAAO,EAAEU,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFL,EAGK;AAAQ,IAAA,QAAQ,EAAC,GAAjB;AAAqB,IAAA,EAAE,EAAC,UAAxB;AAAmC,IAAA,OAAO,EAAEmB,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHL,EAIK;AAAQ,IAAA,QAAQ,EAAC,GAAjB;AAAqB,IAAA,EAAE,EAAC,QAAxB;AAAiC,IAAA,OAAO,EAAEC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJL,CARV,EAcgB9C,KAdhB,EAeU;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,EAAE,EAAC,WAAX;AAAuB,IAAA,OAAO,EAAEL,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAfV,CADF,CADF;AAyBH","sourcesContent":["import React, {useLayoutEffect, useEffect, useCallback} from 'react';\nimport Sound from 'react-sound';\nimport boggartInstructions from '../audio/level3.m4a';\nimport rattling from \"../audio/rattling.mp3\";\n\nfunction RenderReply(props) {\n    return (\n        <React.Fragment>\n             <Sound\n               url={props.reply}\n               playStatus={Sound.status.PLAYING}\n               autoLoad={true}\n               loop={false}\n               volume={100}\n              />\n        </React.Fragment>\n    );\n}\n\nexport function Boggart(props) {\n\n    const handleExitClick = () => {\n        props.exit();\n    }\n\n    const intro = <React.Fragment>\n      <Sound\n         url={rattling}\n         playStatus={Sound.status.PLAYING}\n         autoLoad={true}\n         loop={false}\n         volume={75}\n      />\n        <Sound\n          url={boggartInstructions}\n          playStatus={Sound.status.PLAYING}\n          autoLoad={true}\n          loop={true}\n         volume={75}\n         />\n                  </React.Fragment>;\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n    const[sound, setSound] = useState(intro);\n    const[correct, setCorrect] = useState(false);\n\n    const tickle = <React.Fragment>\n                                  <Sound\n                                     url={rain_spell}\n                                     playStatus={Sound.status.PLAYING}\n                                     autoLoad={true}\n                                     loop={false}\n                                     volume={75} />\n                                  <Sound\n                                     url={rain_sound}\n                                     playStatus={Sound.status.PLAYING}\n                                     autoLoad={true}\n                                     loop={false}\n                                     volume={75} />\n                                   </React.Fragment>;\n\n    const explosion_comp =   <React.Fragment>\n                                 <Sound\n                                    url={explosion_spell}\n                                    playStatus={Sound.status.PLAYING}\n                                    autoLoad={true}\n                                    loop={false}\n                                    volume={100} />\n                                 <Sound\n                                    url={explosion}\n                                    playStatus={Sound.status.PLAYING}\n                                    autoLoad={true}\n                                    loop={false}\n                                    volume={25} />\n                                  </React.Fragment>;\n\n    const sunlight = <React.Fragment>\n                       <Sound\n                          url={sunlight_spell}\n                          playStatus={Sound.status.PLAYING}\n                          autoLoad={true}\n                          loop={false}\n                          volume={100} />\n                     </React.Fragment>;\n\n    const scream = <React.Fragment>\n                        <Sound\n                           url={scream_spell}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={100} />\n                        <Sound\n                           url={scream_sound}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={25} />\n                    </React.Fragment>;\n\n    const handleTickle = () => {\n        console.log(document.activeElement.id);\n       setSound(<RenderReply reply={rain_reply}/>);\n    }\n\n    const handleDancing= () => {\n        setSound(<RenderReply reply={explosion_reply}/>);\n    }\n\n    const finishedLevel = () => {\n        handleViewChange('level-two');\n    }\n\n    const handleFunny = () => {\n       setSound(<Sound\n                  url={sunlight_reply}\n                  playStatus={Sound.status.PLAYING}\n                  autoLoad={true}\n                  loop={false}\n                  volume={100}\n                   onFinishedPlaying={finishedLevel}\n                />);\n    }\n\n    const handleTorture = () => {\n        setSound(<RenderReply reply={scream_reply}/>);\n    }\n\n    const handleSpace = () => {\n       let id =  console.log(document.activeElement.id);\n       switch(id) {\n       case \"tickle\":\n         handleTickle();\n       break;\n       case \"funny\":\n       handleFunny();\n       break;\n       case \"dancing\":\n       handleDancing();\n       break;\n       case \"torture\":\n       handleTorture();\n       break;\n       }\n    }\n\n    const handleSelect = (name) => {\n        console.log(name);\n        switch(name) {\n            case -1:\n            setSound(tickle);\n            break;\n            case 1:\n            setSound(funny);\n            break;\n            case 2:\n            setSound(dancing);\n            break;\n            case 3:\n            setSound(torture);\n            break;\n        }\n    }\n\n      const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n           case \"Tab\":\n           handleSelect(document.activeElement.tabIndex)\n           break;\n           case \" \":\n           handleSpace();\n           break;\n           case \"Escape\":\n           props.exit();\n           }\n      }, [props]);\n\n     useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n\n    return (\n      <div id=\"boggart-image\">\n        <div id=\"d-landing\">\n                  <h id=\"h-entrance\" >\n                        Welcome to level three!\n                  </h>\n                  <p id=\"p-landing\">\n                  Ah, you have encountered the boggart, a very mysterious creature! This creature knows all of your deepest, darkest fears and transforms into the thing that you are most afraid of. \n                  There is a special spell that you must use in order to defeat the boggart. Let’s see if you can figure out what spell to use… \n                  </p>\n                  <div id=\"d-options\">\n                       <button id=\"tickle\" tabIndex = \"1\" onClick={handleTickle}> Tickle Spell </button>\n                       <button tabIndex=\"2\" id=\"funny\" onClick={handleFunny}>Funny Spell</button>\n                       <button tabIndex=\"3\" id=\"sunlight\" onClick={handleSunlight}>Sunlight Spell</button>\n                       <button tabIndex=\"4\" id=\"scream\" onClick={handleScream}>Scream Spell</button>\n                       </div>\n                       {sound}\n                  <div id=\"d-button-holder\">\n                    <button id=\"b-landing\" onClick={handleExitClick}>\n                         Exit Maze\n                    </button>\n                  </div>\n          </div>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}