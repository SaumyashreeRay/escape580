{"ast":null,"code":"var _jsxFileName = \"/Users/shree/Documents/GitHub/escape580/src/components/riddle.js\";\nimport React, { useLayoutEffect, useEffect, useCallback, useState } from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css';\nimport riddle from \"../audio/sphinx/riddle.mp3\";\nimport snake from \"../audio/sphinx/snakepit.wav\";\nimport transition from '../audio/transition.mov';\nimport dementor_answer from '../audio/sphinx/dementor_answer.m4a';\nimport dementor_sound from '../audio/sphinx/dementor_sound.wav';\nimport dementor_reply from '../audio/sphinx/dementor_reply.m4a';\nimport mummy_answer from '../audio/sphinx/mummy.m4a';\nimport mummy_sound from '../audio/sphinx/mummy.wav';\nimport mummy_reply from '../audio/sphinx/mummy-reply.m4a';\nimport spider_answer from '../audio/sphinx/spider.m4a';\nimport spider_sound from '../audio/sphinx/spider-sound.mp3';\nimport spider_reply from '../audio/sphinx/spider_reply.m4a';\nimport skrewt_answer from '../audio/sphinx/skrewt.m4a';\nimport skrewt_sound from '../audio/sphinx/skrewt.wav';\nimport skrewt_reply from '../audio/sphinx/skrewt_reply.m4a';\n\nfunction RenderReply(props) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: props.reply,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}\n\nexport function Riddle(props) {\n  const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n  const intro = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: riddle,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    playbackRate: \".7\",\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: snake,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: true,\n    volume: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n\n  const finishTransition = () => {\n    setSound(intro);\n  };\n\n  const transit = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: transition,\n    playStatus: Sound.status.PLAYING,\n    onFinishedPlaying: finishTransition,\n    autoLoad: true,\n    loop: false,\n    volume: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n  const [sound, setSound] = useState(transit);\n  const [correct, setCorrect] = useState(false);\n  const mummy = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: mummy_answer,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: mummy_sound,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 75,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n  const spider = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: spider_answer,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    playbackRate: \".5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: spider_sound,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }));\n  const skrewt = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: skrewt_answer,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    playbackRate: \".8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: skrewt_sound,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n  const dementor = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: dementor_sound,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: dementor_answer,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }));\n\n  const handleMummy = () => {\n    // While a mummy can be a disguise, this is not the right answer. Answer again quickly before the sphinx attacks you!\n    setSound(React.createElement(RenderReply, {\n      reply: mummy_reply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  };\n\n  const handleSpider = () => {\n    // A spy will try to find out your secrets, and \"er\" is a sound made when searching for a word. \n    // The middle of middle is “i”, and the end of end is “d”, so this forms the word spider! you are correct!\n    setSound(React.createElement(Sound, {\n      url: spider_reply,\n      playStatus: Sound.status.PLAYING,\n      autoLoad: true,\n      loop: false,\n      volume: 100,\n      onFinishedPlaying: finishedLevel,\n      playbackRate: \".8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }));\n  };\n\n  const handleSkrewt = () => {\n    // A blast-ended skrewt is more likely to burn you than find out your secrets! Answer again quickly before the sphinx attacks you!\n    setSound(React.createElement(Sound, {\n      url: skrewt_reply,\n      playStatus: Sound.status.PLAYING,\n      autoLoad: true,\n      loop: false,\n      volume: 100,\n      playbackRate: \".8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }));\n  };\n\n  const handleDementor = () => {\n    // A dementor is a creature you wouldn't want to kiss, as you would lose your soul! But \"e\" is the end of middle, and the beginning of end.\n    //setSound(<RenderReply reply={dementor_reply}/>);\n    setSound(React.createElement(Sound, {\n      url: dementor_reply,\n      playStatus: Sound.status.PLAYING,\n      autoLoad: true,\n      loop: false,\n      volume: 100,\n      playbackRate: \".5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }));\n  };\n\n  const finishedLevel = () => {\n    handleViewChange('level-five');\n  };\n\n  const repeatRiddle = () => {\n    setSound(React.createElement(Sound, {\n      url: intro,\n      playStatus: Sound.status.PLAYING,\n      autoLoad: true,\n      loop: false,\n      volume: 100,\n      playbackRate: \".5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }));\n  };\n\n  const handleSpace = () => {\n    let id = console.log(document.activeElement.id);\n\n    switch (id) {\n      case \"mummy\":\n        handleMummy();\n        break;\n\n      case \"spider\":\n        handleSpider();\n        break;\n\n      case \"skrewt\":\n        handleSkrewt();\n        break;\n\n      case \"dementor\":\n        handleDementor();\n        break;\n    }\n  };\n\n  const handleSelect = name => {\n    console.log(name);\n\n    switch (name) {\n      case -1:\n        setSound(mummy);\n        break;\n\n      case 4:\n        handleSelect(-1);\n        break;\n\n      case 1:\n        setSound(spider);\n        break;\n\n      case 2:\n        setSound(dementor);\n        break;\n\n      case 3:\n        setSound(skrewt);\n        break;\n    }\n  };\n\n  const handleKey = useCallback(e => {\n    var event = window.event ? window.event : e;\n    console.log(event);\n\n    switch (e.key) {\n      case \"Tab\":\n        handleSelect(document.activeElement.tabIndex);\n        break;\n\n      case \" \":\n        handleSpace();\n        break;\n\n      case \"Enter\":\n        console.log(\"ENTER\");\n        repeatRiddle();\n        break;\n\n      case \"Escape\":\n        props.exit();\n    }\n  }, [props]);\n  useLayoutEffect(() => {\n    document.addEventListener(\"keydown\", handleKey);\n    return function cleanup() {\n      document.removeEventListener(\"keydown\", handleKey);\n    };\n  });\n  return React.createElement(\"div\", {\n    id: \"sphinx-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"d-landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"h\", {\n    id: \"h-entrance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Answer the Sphinx's Riddle\"), React.createElement(\"p\", {\n    id: \"p-landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"First think of the person who lives in disguise,\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }), \"Who deals in secrets and tells naught but lies. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }), \"Next, tell me what\\u2019s always the last thing to mend, \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }), \"The middle of middle and end of the end? \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), \"And finally give me the sound often heard \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), \"During the search for a hard-to-find word. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }), \"Now string them together, and answer me this, \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), \"Which creature would you be unwilling to kiss? \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"d-options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"mummy\",\n    tabIndex: \"1\",\n    onClick: handleMummy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, \" Mummy \"), React.createElement(\"button\", {\n    tabIndex: \"2\",\n    id: \"spider\",\n    onClick: handleSpider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"Spider\"), React.createElement(\"button\", {\n    tabIndex: \"3\",\n    id: \"dementor\",\n    onClick: handleDementor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"Dementor\"), React.createElement(\"button\", {\n    tabIndex: \"4\",\n    id: \"skrewt\",\n    onClick: handleSkrewt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, \"Blast-Ended Skrewt\")), sound));\n}","map":{"version":3,"sources":["/Users/shree/Documents/GitHub/escape580/src/components/riddle.js"],"names":["React","useLayoutEffect","useEffect","useCallback","useState","Sound","riddle","snake","transition","dementor_answer","dementor_sound","dementor_reply","mummy_answer","mummy_sound","mummy_reply","spider_answer","spider_sound","spider_reply","skrewt_answer","skrewt_sound","skrewt_reply","RenderReply","props","reply","status","PLAYING","Riddle","handleViewChange","undefined","intro","finishTransition","setSound","transit","sound","correct","setCorrect","mummy","spider","skrewt","dementor","handleMummy","handleSpider","finishedLevel","handleSkrewt","handleDementor","repeatRiddle","handleSpace","id","console","log","document","activeElement","handleSelect","name","handleKey","e","event","window","key","tabIndex","exit","addEventListener","cleanup","removeEventListener"],"mappings":"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","sourcesContent":["import React, {useLayoutEffect, useEffect, useCallback, useState} from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css';\nimport riddle from \"../audio/sphinx/riddle.mp3\";\nimport snake from \"../audio/sphinx/snakepit.wav\";\nimport transition from '../audio/transition.mov';\n\n\nimport dementor_answer from '../audio/sphinx/dementor_answer.m4a';\nimport dementor_sound from '../audio/sphinx/dementor_sound.wav';\nimport dementor_reply from '../audio/sphinx/dementor_reply.m4a';\n\nimport mummy_answer from '../audio/sphinx/mummy.m4a';\nimport mummy_sound from '../audio/sphinx/mummy.wav';\nimport mummy_reply from '../audio/sphinx/mummy-reply.m4a';\n\nimport spider_answer from '../audio/sphinx/spider.m4a';\nimport spider_sound from '../audio/sphinx/spider-sound.mp3';\nimport spider_reply from '../audio/sphinx/spider_reply.m4a';\n\nimport skrewt_answer from '../audio/sphinx/skrewt.m4a';\nimport skrewt_sound from '../audio/sphinx/skrewt.wav';\nimport skrewt_reply from '../audio/sphinx/skrewt_reply.m4a';\n\n\nfunction RenderReply(props) {\n    return (<React.Fragment>\n             <Sound\n               url={props.reply}\n               playStatus={Sound.status.PLAYING}\n               autoLoad={true}\n               loop={false}\n               volume={100}\n              />\n        </React.Fragment>\n    );\n}\n\nexport function Riddle(props) {\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n    const intro = <React.Fragment>\n                    <Sound\n                    url={riddle}\n                    playStatus={Sound.status.PLAYING}\n                    autoLoad={true}\n                    loop={false}\n                    playbackRate=\".7\"\n                    volume={100} />\n                    <Sound\n                    url={snake}\n                    playStatus={Sound.status.PLAYING}\n                    autoLoad={true}\n                    loop={true}\n                    volume={50} />\n                    </React.Fragment>;\n\n    const finishTransition = () => {\n           setSound(intro);\n    };\n\n    const transit = <React.Fragment>\n                     <Sound\n                       url={transition}\n                       playStatus={Sound.status.PLAYING}\n                       onFinishedPlaying ={finishTransition}\n                       autoLoad={true}\n                       loop={false}\n                       volume={50}\n                     />\n                     </React.Fragment>;\n\n    const[sound, setSound] = useState(transit);\n    const[correct, setCorrect] = useState(false);\n\n    const mummy = <React.Fragment>\n                    <Sound\n                        url={mummy_answer}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={75} />\n                    <Sound\n                        url={mummy_sound}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={75} />\n                </React.Fragment>;\n\n    const spider =  <React.Fragment>\n                        <Sound\n                        url={spider_answer}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={100} \n                        playbackRate='.5'/>\n                        <Sound\n                        url={spider_sound}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={25} />\n                    </React.Fragment>;\n\n    const skrewt = <React.Fragment>\n                        <Sound\n                          url={skrewt_answer}\n                          playStatus={Sound.status.PLAYING}\n                          autoLoad={true}\n                          loop={false}\n                          volume={100}\n                          playbackRate='.8' />\n                          <Sound\n                          url={skrewt_sound}\n                          playStatus={Sound.status.PLAYING}\n                          autoLoad={true}\n                          loop={false}\n                          volume={30} />\n                    </React.Fragment>;\n\n    const dementor = <React.Fragment>\n                        <Sound\n                           url={dementor_sound}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={25} />\n                        <Sound\n                           url={dementor_answer}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={100} />\n                    </React.Fragment>;\n\n    const handleMummy = () => {\n        // While a mummy can be a disguise, this is not the right answer. Answer again quickly before the sphinx attacks you!\n        setSound(<RenderReply reply={mummy_reply}/>);\n    }\n\n    const handleSpider= () => {\n        // A spy will try to find out your secrets, and \"er\" is a sound made when searching for a word. \n        // The middle of middle is “i”, and the end of end is “d”, so this forms the word spider! you are correct!\n        setSound(<Sound\n            url={spider_reply}\n            playStatus={Sound.status.PLAYING}\n            autoLoad={true}\n            loop={false}\n            volume={100}\n            onFinishedPlaying={finishedLevel}\n            playbackRate='.8'\n          />);\n    }\n\n    const handleSkrewt = () => {\n        // A blast-ended skrewt is more likely to burn you than find out your secrets! Answer again quickly before the sphinx attacks you!\n       setSound(<Sound\n                  url={skrewt_reply}\n                  playStatus={Sound.status.PLAYING}\n                  autoLoad={true}\n                  loop={false}\n                  volume={100}\n                  playbackRate='.8'\n                />);\n    }\n\n    const handleDementor = () => {\n        // A dementor is a creature you wouldn't want to kiss, as you would lose your soul! But \"e\" is the end of middle, and the beginning of end.\n        //setSound(<RenderReply reply={dementor_reply}/>);\n        setSound(<Sound\n            url={dementor_reply}\n            playStatus={Sound.status.PLAYING}\n            autoLoad={true}\n            loop={false}\n            volume={100}\n            playbackRate='.5'\n          />);\n    }\n\n    const finishedLevel = () => {\n        handleViewChange('level-five');\n    }\n\n    const repeatRiddle = () => {\n        setSound(<Sound\n            url={intro}\n            playStatus={Sound.status.PLAYING}\n            autoLoad={true}\n            loop={false}\n            volume={100}\n            playbackRate='.5'\n          />);\n    }\n\n    const handleSpace = () => {\n       let id =  console.log(document.activeElement.id);\n       switch(id) {\n       case \"mummy\":\n           handleMummy();\n           break;\n       case \"spider\":\n           handleSpider();\n           break;\n       case \"skrewt\":\n           handleSkrewt();\n           break;\n       case \"dementor\":\n           handleDementor();\n           break;\n       }\n    }\n\n    const handleSelect = (name) => {\n        console.log(name);\n        switch(name) {\n            case -1:\n            setSound(mummy);\n            break;\n            case 4:\n            handleSelect(-1);\n            break;\n            case 1:\n            setSound(spider);\n            break;\n            case 2:\n            setSound(dementor);\n            break;\n            case 3:\n            setSound(skrewt);\n            break;\n        }\n    }\n\n      const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n                case \"Tab\":\n                    handleSelect(document.activeElement.tabIndex)\n                    break;\n                case \" \":\n                    handleSpace();\n                    break;\n                case \"Enter\":\n                    console.log(\"ENTER\");\n                    repeatRiddle();\n                    break;\n                case \"Escape\":\n                    props.exit();\n           }\n      }, [props]);\n\n     useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n    return (\n    <div id=\"sphinx-image\">\n       <div id=\"d-landing\">\n                      <h id=\"h-entrance\" >\n                            Answer the Sphinx's Riddle\n                      </h>\n                      <p id=\"p-landing\">\n                      First think of the person who lives in disguise,<br></br>\n                       Who deals in secrets and tells naught but lies. <br></br>\n                      Next, tell me what’s always the last thing to mend, <br></br>\n                      The middle of middle and end of the end? <br></br>\n                       And finally give me the sound often heard <br></br>\n                      During the search for a hard-to-find word. <br></br>\n                       Now string them together, and answer me this, <br></br>\n                       Which creature would you be unwilling to kiss? <br></br>\n                      </p>\n                        <div id=\"d-options\">\n                       <button id=\"mummy\" tabIndex = \"1\" onClick={handleMummy}> Mummy </button>\n                       <button tabIndex=\"2\" id=\"spider\" onClick={handleSpider}>Spider</button>\n                       <button tabIndex=\"3\" id=\"dementor\" onClick={handleDementor}>Dementor</button>\n                       <button tabIndex=\"4\" id=\"skrewt\" onClick={handleSkrewt}>Blast-Ended Skrewt</button>\n                       </div>\n                       {sound}\n                       {/* {sound} */}\n                    </div>\n    </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}