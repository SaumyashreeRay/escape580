{"ast":null,"code":"import _slicedToArray from\"/Users/csoutter/Documents/COMP 580/escape580/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useLayoutEffect}from'react';import{Entrance}from'./entrance';import{Landing}from'./landing';import{DevilsSnare}from'./devilsSnare';import{Sphinx}from'./sphinx';import{Riddle}from'./riddle';import{Prophecy}from\"./prophecy\";import{Ending}from\"./ending\";import{Boggart}from'./boggart';import{Chamber}from'./chamber';import{Instructions}from'./instructions';export function AppView(props){var _useState=useState('instructions'),_useState2=_slicedToArray(_useState,2),view=_useState2[0],setView=_useState2[1];var _useState3=useState(React.createElement(Entrance,null)),_useState4=_slicedToArray(_useState3,2),viewDisplay=_useState4[0],setDisplay=_useState4[1];var handleViewChange=function handleViewChange(view){setView(view);};var handleExitClick=function handleExitClick(){setView('landing');};useLayoutEffect(function(){switch(view){case'enter':setDisplay(React.createElement(Entrance,{background:\"url('../images/harry_in_maze.jpg')\",handleViewChange:handleViewChange,exit:handleExitClick}));break;case'instructions':setDisplay(React.createElement(Instructions,{handleViewChange:handleViewChange}));break;case'landing':setDisplay(React.createElement(Landing,null));break;case'level-one'://future implementations: call randomization function here to determine\n//which component will be displayed\nsetDisplay(React.createElement(DevilsSnare,{background:\"url('../images/devilsSnare.jpg')\",exit:handleExitClick,handleViewChange:handleViewChange}));break;case'level-two':setDisplay(React.createElement(Chamber,{exit:handleExitClick,handleViewChange:handleViewChange}));break;case'level-three':setDisplay(React.createElement(Boggart,{background:\"url('../images/boggart.jpg')\",exit:handleExitClick,handleViewChange:handleViewChange}));break;case'level-four':setDisplay(React.createElement(Sphinx,{background:\"url('../images/Sphinx.png')\",exit:handleExitClick,handleViewChange:handleViewChange}));break;case'riddle':setDisplay(React.createElement(Riddle,{background:\"url('../images/Sphinx.png')\",exit:handleExitClick,handleViewChange:handleViewChange}));break;case'level-five':setDisplay(React.createElement(Prophecy,{background:\"url('../images/prophecy.png')\",exit:handleExitClick,handleViewChange:handleViewChange}));break;case'ending':setDisplay(React.createElement(Ending,{background:\"url('../images/prophecy.png')\",exit:handleExitClick,handleViewChange:handleViewChange}));break;default:setDisplay(React.createElement(Entrance,{background:\"url('../images/harry_in_maze.jpg')\",handleViewChange:handleViewChange}));}},[view]);return React.createElement(React.Fragment,null,viewDisplay);}","map":{"version":3,"sources":["/Users/csoutter/Documents/COMP 580/escape580/src/components/appView.js"],"names":["React","useState","useLayoutEffect","Entrance","Landing","DevilsSnare","Sphinx","Riddle","Prophecy","Ending","Boggart","Chamber","Instructions","AppView","props","view","setView","viewDisplay","setDisplay","handleViewChange","handleExitClick"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from 'react';\nimport {Entrance} from './entrance';\nimport {Landing} from './landing';\nimport {DevilsSnare} from './devilsSnare';\nimport { Sphinx } from './sphinx';\nimport { Riddle } from './riddle';\nimport {Prophecy } from \"./prophecy\";\nimport {Ending} from \"./ending\";\nimport { Boggart } from './boggart';\nimport { Chamber } from './chamber';\nimport { Instructions } from './instructions';\n\n\nexport function AppView(props){\n\n    const[view, setView] = useState('instructions');\n    const[viewDisplay, setDisplay] = useState(<Entrance/>);\n\n    const handleViewChange = (view) => {\n        setView(view);\n    };\n\n    const handleExitClick = () => {\n            setView('landing');\n        }\n\n    useLayoutEffect(() => {\n          switch(view) {\n            case 'enter':\n            setDisplay(\n            <Entrance\n            background=\"url('../images/harry_in_maze.jpg')\"\n            handleViewChange={handleViewChange}\n            exit={handleExitClick}\n            />\n            );\n            break;\n            case 'instructions':\n            setDisplay(\n            <Instructions\n            handleViewChange={handleViewChange}\n            />);\n            break;\n            case 'landing':\n            setDisplay(\n            <Landing/>\n            );\n            break;\n            case 'level-one':\n            //future implementations: call randomization function here to determine\n            //which component will be displayed\n           setDisplay(\n            <DevilsSnare\n            background=\"url('../images/devilsSnare.jpg')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'level-two':\n            setDisplay(<Chamber\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />);\n            break;\n            case 'level-three':\n                setDisplay(\n                    <Boggart\n                    background=\"url('../images/boggart.jpg')\"\n                    exit={handleExitClick}\n                    handleViewChange={handleViewChange}\n                    />\n                );\n                break;\n            case 'level-four':\n           setDisplay(\n            <Sphinx\n            background=\"url('../images/Sphinx.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'riddle':\n            setDisplay(\n            <Riddle\n            background=\"url('../images/Sphinx.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );  \n            break;\n            case 'level-five':\n           setDisplay(\n            <Prophecy\n            background=\"url('../images/prophecy.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'ending':\n           setDisplay(\n            <Ending\n            background=\"url('../images/prophecy.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            default:\n            setDisplay(\n            <Entrance background=\"url('../images/harry_in_maze.jpg')\" handleViewChange={handleViewChange}/>\n            );\n          }\n       }, [view]);\n\n    return (\n    <React.Fragment>\n        {viewDisplay}\n    </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}