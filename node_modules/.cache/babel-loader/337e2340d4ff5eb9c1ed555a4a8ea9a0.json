{"ast":null,"code":"var _jsxFileName = \"/Users/shree/Documents/GitHub/escape580/src/components/sphinx.js\";\nimport React, { useLayoutEffect, useEffect, useCallback, useState } from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css';\nimport sphinxInstructions from '../audio/sphinx/level4.mov';\nimport level4announce from '../audio/sphinx/level4announce.mp3';\nimport hiss from \"../audio/sphinx/hiss.mp3\";\nimport snake from \"../audio/sphinx/snakepit.wav\";\nimport spacebar from \"../audio/sphinx/spacebar.m4a\";\nimport transition from '../audio/transition.mov';\nimport help_message from '../audio/help.m4a';\n\nfunction RenderReply(props) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: props.reply,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}\n\nexport function Sphinx(props) {\n  const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n  const finishedinstructions = () => {\n    setSound(React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Sound, {\n      url: spacebar,\n      playStatus: Sound.status.PLAYING // onFinishedPlaying={finishedspace}\n      ,\n      autoLoad: true,\n      loop: false,\n      volume: 100,\n      playbackRate: \".8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Sound, {\n      url: snake,\n      playStatus: Sound.status.PLAYING,\n      autoLoad: true,\n      loop: true,\n      volume: 100,\n      playbackRate: \".8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  };\n\n  const intro = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: sphinxInstructions,\n    playStatus: Sound.status.PLAYING,\n    onFinishedPlaying: finishedinstructions,\n    autoLoad: true,\n    loop: false,\n    playbackRate: \".7\",\n    volume: \"100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: snake,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: true,\n    volume: \"40\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Sound, {\n    url: hiss,\n    playStatus: Sound.status.PLAYING,\n    autoLoad: true,\n    loop: false,\n    volume: \"60\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n\n  const finishTransition = () => {\n    setSound(intro);\n  };\n\n  const repeatIntro = () => {\n    Sound.playStatus = Sound.status.STOPPED;\n    setSound(React.createElement(Sound, {\n      url: sphinxInstructions,\n      playStatus: Sound.status.STOPPED,\n      autoLoad: true,\n      loop: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n    setSound(React.createElement(Sound, {\n      url: snake,\n      playStatus: Sound.status.STOPPED,\n      autoLoad: true,\n      loop: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n    setSound(intro);\n  };\n\n  const transit = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: transition,\n    playStatus: Sound.status.PLAYING,\n    onFinishedPlaying: finishTransition,\n    autoLoad: true,\n    loop: false,\n    volume: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }));\n  const help = React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Sound, {\n    url: help_message,\n    playStatus: Sound.status.PLAYING,\n    onFinishedPlaying: repeatIntro,\n    autoLoad: true,\n    loop: false,\n    volume: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }));\n  const [sound, setSound] = useState(transit);\n\n  const handleHelp = () => {\n    Sound.playStatus = Sound.status.STOPPED;\n    setSound(help);\n  };\n\n  const handleSpace = () => {\n    handleViewChange('riddle');\n  };\n\n  const handleKey = useCallback(e => {\n    var event = window.event ? window.event : e;\n    console.log(event);\n\n    switch (e.key) {\n      case \" \":\n        handleSpace();\n        break;\n\n      case \"ArrowRight\":\n        repeatIntro();\n        break;\n\n      case \"ArrowLeft\":\n        handleHelp();\n        break;\n\n      case \"Escape\":\n        props.exit();\n    }\n  }, [props]);\n  useLayoutEffect(() => {\n    document.addEventListener(\"keydown\", handleKey);\n    return function cleanup() {\n      document.removeEventListener(\"keydown\", handleKey);\n    };\n  });\n  return React.createElement(\"div\", {\n    id: \"sphinx-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"d-landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"h\", {\n    id: \"h-entrance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Welcome to Level Four\"), React.createElement(\"p\", {\n    id: \"p-landing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"You are very near your goal. The quickest way is past me, a powerful sphinx. I will not move, no, not unless you can answer my riddle. Answer on your first guess \\u2014 I let you pass. Answer wrongly \\u2014 I attack. Remain silent \\u2014 I will let you walk away from me unscathed. Press the spacebar to hear the riddle\"), React.createElement(\"div\", {\n    id: \"d-button-holder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), sound));\n}","map":{"version":3,"sources":["/Users/shree/Documents/GitHub/escape580/src/components/sphinx.js"],"names":["React","useLayoutEffect","useEffect","useCallback","useState","Sound","sphinxInstructions","level4announce","hiss","snake","spacebar","transition","help_message","RenderReply","props","reply","status","PLAYING","Sphinx","handleViewChange","undefined","finishedinstructions","setSound","intro","finishTransition","repeatIntro","playStatus","STOPPED","transit","help","sound","handleHelp","handleSpace","handleKey","e","event","window","console","log","key","exit","document","addEventListener","cleanup","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,SAAjC,EAA4CC,WAA5C,EAAyDC,QAAzD,QAAyE,OAAzE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,eAAP;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,KADb;AAEE,IAAA,UAAU,EAAEV,KAAK,CAACW,MAAN,CAAaC,OAF3B;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,IAAI,EAAE,KAJR;AAKE,IAAA,MAAM,EAAE,GALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD;;AAED,OAAO,SAASC,MAAT,CAAgBJ,KAAhB,EAAuB;AAE5B,QAAMK,gBAAgB,GAAGL,KAAK,CAACK,gBAAN,KAA2BC,SAA3B,GAAuC,IAAvC,GAA8CN,KAAK,CAACK,gBAA7E;;AACA,QAAME,oBAAoB,GAAG,MAAM;AACjCC,IAAAA,QAAQ,CAAC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgB,oBAAC,KAAD;AACvB,MAAA,GAAG,EAAEZ,QADkB;AAEvB,MAAA,UAAU,EAAEL,KAAK,CAACW,MAAN,CAAaC,OAFF,CAGvB;AAHuB;AAIvB,MAAA,QAAQ,EAAE,IAJa;AAKvB,MAAA,IAAI,EAAE,KALiB;AAMvB,MAAA,MAAM,EAAE,GANe;AAOvB,MAAA,YAAY,EAAC,IAPU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,EAQP,oBAAC,KAAD;AACE,MAAA,GAAG,EAAER,KADP;AAEE,MAAA,UAAU,EAAEJ,KAAK,CAACW,MAAN,CAAaC,OAF3B;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,IAAI,EAAE,IAJR;AAKE,MAAA,MAAM,EAAE,GALV;AAME,MAAA,YAAY,EAAC,IANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARO,CAAD,CAAR;AAiBD,GAlBD;;AAoBA,QAAMM,KAAK,GAAG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACZ,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEjB,kBADP;AAEE,IAAA,UAAU,EAAED,KAAK,CAACW,MAAN,CAAaC,OAF3B;AAGE,IAAA,iBAAiB,EAAEI,oBAHrB;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,IAAI,EAAE,KALR;AAME,IAAA,YAAY,EAAC,IANf;AAOE,IAAA,MAAM,EAAC,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,EASZ,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEZ,KADP;AAEE,IAAA,UAAU,EAAEJ,KAAK,CAACW,MAAN,CAAaC,OAF3B;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,IAAI,EAAE,IAJR;AAKE,IAAA,MAAM,EAAC,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATY,EAgBZ,oBAAC,KAAD;AACE,IAAA,GAAG,EAAET,IADP;AAEE,IAAA,UAAU,EAAEH,KAAK,CAACW,MAAN,CAAaC,OAF3B;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,IAAI,EAAE,KAJR;AAKE,IAAA,MAAM,EAAC,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBY,CAAd;;AAyBA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBpB,IAAAA,KAAK,CAACqB,UAAN,GAAmBrB,KAAK,CAACW,MAAN,CAAaW,OAAhC;AACAL,IAAAA,QAAQ,CACN,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEhB,kBADP;AAEE,MAAA,UAAU,EAAED,KAAK,CAACW,MAAN,CAAaW,OAF3B;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,IAAI,EAAE,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,CAAR;AASAL,IAAAA,QAAQ,CACN,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEb,KADP;AAEE,MAAA,UAAU,EAAEJ,KAAK,CAACW,MAAN,CAAaW,OAF3B;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,IAAI,EAAE,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,CAAR;AASAL,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD,GArBD;;AAuBA,QAAMK,OAAO,GAAG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACd,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEjB,UADP;AAEE,IAAA,UAAU,EAAEN,KAAK,CAACW,MAAN,CAAaC,OAF3B;AAGE,IAAA,iBAAiB,EAAEO,gBAHrB;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,IAAI,EAAE,KALR;AAME,IAAA,MAAM,EAAE,EANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,CAAhB;AAUF,QAAMK,IAAI,GAAG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACb,oBAAC,KAAD;AACG,IAAA,GAAG,EAAEjB,YADR;AAEG,IAAA,UAAU,EAAEP,KAAK,CAACW,MAAN,CAAaC,OAF5B;AAGG,IAAA,iBAAiB,EAAEQ,WAHtB;AAIG,IAAA,QAAQ,EAAE,IAJb;AAKG,IAAA,IAAI,EAAE,KALT;AAMG,IAAA,MAAM,EAAE,GANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,CAAb;AAUE,QAAM,CAACK,KAAD,EAAQR,QAAR,IAAoBlB,QAAQ,CAACwB,OAAD,CAAlC;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvB1B,IAAAA,KAAK,CAACqB,UAAN,GAAmBrB,KAAK,CAACW,MAAN,CAAaW,OAAhC;AACAL,IAAAA,QAAQ,CAACO,IAAD,CAAR;AACH,GAHC;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxBb,IAAAA,gBAAgB,CAAC,QAAD,CAAhB;AACD,GAFD;;AAIA,QAAMc,SAAS,GAAG9B,WAAW,CAAE+B,CAAD,IAAO;AACnC,QAAIC,KAAK,GAAGC,MAAM,CAACD,KAAP,GAAeC,MAAM,CAACD,KAAtB,GAA8BD,CAA1C;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,YAAQD,CAAC,CAACK,GAAV;AACE,WAAK,GAAL;AACEP,QAAAA,WAAW;AACX;;AACF,WAAK,YAAL;AACEP,QAAAA,WAAW;AACX;;AACA,WAAK,WAAL;AACEM,QAAAA,UAAU;AACV;;AACJ,WAAK,QAAL;AACEjB,QAAAA,KAAK,CAAC0B,IAAN;AAXJ;AAaD,GAjB4B,EAiB1B,CAAC1B,KAAD,CAjB0B,CAA7B;AAmBAb,EAAAA,eAAe,CAAC,MAAM;AACpBwC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCT,SAArC;AACA,WAAO,SAASU,OAAT,GAAmB;AACxBF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwCX,SAAxC;AACD,KAFD;AAGD,GALc,CAAf;AAOA,SACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,EAAE,EAAC,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAIE;AAAG,IAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uUAJF,EAWE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAaGH,KAbH,CADF,CADF;AAoBD","sourcesContent":["import React, { useLayoutEffect, useEffect, useCallback, useState } from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css';\nimport sphinxInstructions from '../audio/sphinx/level4.mov';\nimport level4announce from '../audio/sphinx/level4announce.mp3'\nimport hiss from \"../audio/sphinx/hiss.mp3\";\nimport snake from \"../audio/sphinx/snakepit.wav\";\nimport spacebar from \"../audio/sphinx/spacebar.m4a\";\nimport transition from '../audio/transition.mov';\nimport help_message from '../audio/help.m4a';\n\nfunction RenderReply(props) {\n  return (\n    <React.Fragment>\n      <Sound\n        url={props.reply}\n        playStatus={Sound.status.PLAYING}\n        autoLoad={true}\n        loop={false}\n        volume={100}\n      />\n    </React.Fragment>\n  );\n}\n\nexport function Sphinx(props) {\n\n  const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n  const finishedinstructions = () => {\n    setSound(<React.Fragment><Sound\n      url={spacebar}\n      playStatus={Sound.status.PLAYING}\n      // onFinishedPlaying={finishedspace}\n      autoLoad={true}\n      loop={false}\n      volume={100}\n      playbackRate='.8' />\n      <Sound\n        url={snake}\n        playStatus={Sound.status.PLAYING}\n        autoLoad={true}\n        loop={true}\n        volume={100}\n        playbackRate='.8'\n      /></React.Fragment>);\n\n  }\n\n  const intro = <React.Fragment>\n    <Sound\n      url={sphinxInstructions}\n      playStatus={Sound.status.PLAYING}\n      onFinishedPlaying={finishedinstructions}\n      autoLoad={true}\n      loop={false}\n      playbackRate=\".7\"\n      volume=\"100\" />\n    <Sound\n      url={snake}\n      playStatus={Sound.status.PLAYING}\n      autoLoad={true}\n      loop={true}\n      volume=\"40\"\n    />\n    <Sound\n      url={hiss}\n      playStatus={Sound.status.PLAYING}\n      autoLoad={true}\n      loop={false}\n      volume=\"60\"\n    />\n  </React.Fragment>;\n\n  const finishTransition = () => {\n    setSound(intro);\n  };\n\n  const repeatIntro = () => {\n    Sound.playStatus = Sound.status.STOPPED;\n    setSound(\n      <Sound\n        url={sphinxInstructions}\n        playStatus={Sound.status.STOPPED}\n        autoLoad={true}\n        loop={false}\n      />\n    );\n\n    setSound(\n      <Sound\n        url={snake}\n        playStatus={Sound.status.STOPPED}\n        autoLoad={true}\n        loop={false}\n      />\n    );\n\n    setSound(intro);\n  }\n\n  const transit = <React.Fragment>\n    <Sound\n      url={transition}\n      playStatus={Sound.status.PLAYING}\n      onFinishedPlaying={finishTransition}\n      autoLoad={true}\n      loop={false}\n      volume={50}\n    />\n  </React.Fragment>;\nconst help = <React.Fragment>\n<Sound\n   url={help_message}\n   playStatus={Sound.status.PLAYING}\n   onFinishedPlaying={repeatIntro}\n   autoLoad={true}\n   loop={false}\n   volume={100}\n/>\n</React.Fragment>;\n  const [sound, setSound] = useState(transit);\n\n  const handleHelp = () => {\n    Sound.playStatus = Sound.status.STOPPED;\n    setSound(help);\n}\n  const handleSpace = () => {\n    handleViewChange('riddle');\n  }\n\n  const handleKey = useCallback((e) => {\n    var event = window.event ? window.event : e;\n    console.log(event);\n\n    switch (e.key) {\n      case \" \":\n        handleSpace();\n        break;\n      case \"ArrowRight\":\n        repeatIntro();\n        break;\n        case \"ArrowLeft\":\n          handleHelp();\n          break;\n      case \"Escape\":\n        props.exit();\n    }\n  }, [props]);\n\n  useLayoutEffect(() => {\n    document.addEventListener(\"keydown\", handleKey);\n    return function cleanup() {\n      document.removeEventListener(\"keydown\", handleKey);\n    };\n  });\n\n  return (\n    <div id=\"sphinx-image\">\n      <div id=\"d-landing\">\n        <h id=\"h-entrance\" >\n          Welcome to Level Four\n                    </h>\n        <p id=\"p-landing\">\n          You are very near your goal. The quickest way is past me, a powerful sphinx.\n           I will not move, no, not unless you can answer my riddle.\n           Answer on your first guess — I let you pass. Answer wrongly — I attack.\n           Remain silent — I will let you walk away from me unscathed.\n           Press the spacebar to hear the riddle\n                    </p>\n        <div id=\"d-button-holder\">\n        </div>\n        {sound}\n\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}