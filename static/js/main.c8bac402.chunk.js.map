{"version":3,"sources":["audio/sphinx/snakepit.wav","audio/zapsplat_fantasy_reversed_backwards_magical_glissando_001_46178.mp3","audio/prophecy/foreboding.wav","fonts/LUMOS.TTF","audio/maze_entrance.m4a","audio/devils_snare2.m4a","audio/devilsSnare/rain_spell.m4a","audio/devilsSnare/rain_soud.mov","audio/devilsSnare/explosion.mov","audio/devilsSnare/explosion_spell.m4a","audio/devilsSnare/sunlight_spell.m4a","audio/devilsSnare/scream_spell.m4a","audio/devilsSnare/scream.mov","audio/devilsSnare/explosion_reply.m4a","audio/devilsSnare/rain_reply.m4a","audio/devilsSnare/sunlight_reply.m4a","audio/devilsSnare/scream_reply.m4a","audio/sphinx/level4.mov","audio/sphinx/hiss.mp3","audio/sphinx/spacebar.m4a","audio/sphinx/riddle.mp3","audio/sphinx/dementor_answer.m4a","audio/sphinx/dementor_sound.wav","audio/sphinx/dementor_reply.m4a","audio/sphinx/mummy.m4a","audio/sphinx/mummy.wav","audio/sphinx/mummy-reply.m4a","audio/sphinx/spider.m4a","audio/sphinx/spider-sound.mp3","audio/sphinx/spider_reply.m4a","audio/sphinx/skrewt.m4a","audio/sphinx/skrewt.wav","audio/sphinx/skrewt_reply.m4a","audio/prophecy/level5.m4a","audio/prophecy/prophecy.m4a","audio/prophecy/thunder.wav","audio/prophecy/hermione.m4a","audio/prophecy/hermione_reply.m4a","audio/prophecy/pettigrew.m4a","audio/prophecy/pettigrew_reply.m4a","audio/prophecy/neville.m4a","audio/prophecy/neville_reply.m4a","audio/prophecy/snape.m4a","audio/prophecy/snape_reply.m4a","audio/ending.m4a","audio/cheering.mp3","audio/boggart/level3.m4a","audio/boggart/rattling.mp3","audio/boggart/torture_reply.m4a","audio/boggart/dancing_reply.m4a","audio/boggart/funny_reply.m4a","audio/boggart/tickle_reply.m4a","audio/boggart/torture.mp3","audio/boggart/tickle.m4a","audio/boggart/dancing.m4a","audio/boggart/laugh.mp3","audio/boggart/torture_spell.m4a","audio/boggart/tickle_spell.m4a","audio/boggart/dancing_spell.m4a","audio/boggart/funny_spell.m4a","audio/chamber/chamber_intro.m4a","audio/chamber/sorting_hat_1.m4a","audio/chamber/sorting_hat_2.m4a","audio/chamber/sword.m4a","audio/chamber/throw_hat.m4a","audio/chamber/hat_reply.m4a","audio/chamber/powers_reply.m4a","audio/chamber/sword_reply.m4a","audio/chamber/gryffindor_reply.m4a","audio/chamber/snakehiss2.mp3","audio/chamber/swordraw.mp3","audio/instructions.m4a","audio/game_entrance.m4a","audio/opening.m4a","audio/sphinx/level4announce.mp3","audio/bensound-epic.mp3","audio/landing.m4a","fonts/HarryP-MVZ6w.ttf","components/entrance.js","components/devilsSnare.js","components/sphinx.js","components/riddle.js","components/prophecy.js","components/ending.js","components/boggart.js","components/chamber.js","components/instructions.js","components/appView.js","components/landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Entrance","props","handleViewChange","undefined","handleKey","useCallback","e","event","window","console","log","key","useLayoutEffect","document","addEventListener","removeEventListener","id","url","playStatus","Sound","status","PLAYING","autoLoad","loop","volume","maze_entrance","RenderReply","Fragment","reply","DevilsSnare","intro","devils_snare","useState","sound","setSound","rain","rain_spell","rain_sound","explosion_comp","explosion_spell","explosion","sunlight","sunlight_spell","scream","scream_spell","scream_sound","handleRain","activeElement","rain_reply","handleExplosion","explosion_reply","finishedLevel","handleSunlight","sunlight_reply","onFinishedPlaying","handleScream","scream_reply","handleSelect","name","tabIndex","handleSpace","exit","onClick","Sphinx","sphinxInstructions","spacebar","playbackRate","snake","hiss","Riddle","riddle","mummy","mummy_answer","mummy_sound","spider","spider_answer","spider_sound","skrewt","skrewt_answer","skrewt_sound","dementor","dementor_sound","dementor_answer","handleMummy","mummy_reply","handleSpider","spider_reply","handleSkrewt","skrewt_reply","handleDementor","dementor_reply","Prophecy","finishedprophecy","foreboding","prophecyinstructions","theprophecy","thunder","hermione","hermione_g","pettigrew","p_pettigrew","neville","neville_l","snape","s_snape","handleHermione","hermione_reply","handlePettigrew","pettigrew_reply","handleNeville","neville_reply","handleSnape","snape_reply","Ending","exitInstructions","clapping","Boggart","rattling","boggartInstructions","tickle_comp","tickle_spell","tickle","funny_comp","funny_spell","funny","dancing_comp","dancing_spell","dancing","torture_comp","torture_spell","torture","handleTickle","tickle_reply","handleDancing","dancing_reply","handleFunny","funny_reply","handleTorture","torture_reply","Chamber","chamber_intro","sword_comp","sword","sort_hat_1_comp","sort_hat_1","sort_hat_2_comp","sort_hat_2","throw_hat_comp","throw_hat","handleSword","sword_draw","sword_reply","handleHat","powers_reply","handleBasilisk","hat_reply","snake_hiss","handleGryffindor","gryffindor_reply","index","Instructions","instructions","AppView","view","setView","viewDisplay","setDisplay","handleExitClick","background","Landing","Greeting","game_entrance","handleClick","App","className","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,6F,gBCA3CD,EAAOC,QAAU,IAA0B,wC,iBCA3CD,EAAOC,QAAU,IAA0B,mC,iBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.c8bac402.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snakepit.8fdb4942.wav\";","module.exports = __webpack_public_path__ + \"static/media/zapsplat_fantasy_reversed_backwards_magical_glissando_001_46178.4a7c87f4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/foreboding.ea1b65f7.wav\";","module.exports = __webpack_public_path__ + \"static/media/LUMOS.d5d39b03.TTF\";","module.exports = __webpack_public_path__ + \"static/media/maze_entrance.9ba935da.m4a\";","module.exports = __webpack_public_path__ + \"static/media/devils_snare2.ea3a6c5d.m4a\";","module.exports = __webpack_public_path__ + \"static/media/rain_spell.dff73c29.m4a\";","module.exports = __webpack_public_path__ + \"static/media/rain_soud.a111a547.mov\";","module.exports = __webpack_public_path__ + \"static/media/explosion.246a352b.mov\";","module.exports = __webpack_public_path__ + \"static/media/explosion_spell.ae80acc7.m4a\";","module.exports = __webpack_public_path__ + \"static/media/sunlight_spell.7da96ed7.m4a\";","module.exports = __webpack_public_path__ + \"static/media/scream_spell.6c1f0921.m4a\";","module.exports = __webpack_public_path__ + \"static/media/scream.731f5504.mov\";","module.exports = __webpack_public_path__ + \"static/media/explosion_reply.d4dabd0a.m4a\";","module.exports = __webpack_public_path__ + \"static/media/rain_reply.693a4da4.m4a\";","module.exports = __webpack_public_path__ + \"static/media/sunlight_reply.801b9794.m4a\";","module.exports = __webpack_public_path__ + \"static/media/scream_reply.d84eb175.m4a\";","module.exports = __webpack_public_path__ + \"static/media/level4.1406a663.mov\";","module.exports = __webpack_public_path__ + \"static/media/hiss.037113c6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/spacebar.d3735bc0.m4a\";","module.exports = __webpack_public_path__ + \"static/media/riddle.2f90c2a3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/dementor_answer.50c465d0.m4a\";","module.exports = __webpack_public_path__ + \"static/media/dementor_sound.77fa59b4.wav\";","module.exports = __webpack_public_path__ + \"static/media/dementor_reply.c29d58b8.m4a\";","module.exports = __webpack_public_path__ + \"static/media/mummy.f04dadd5.m4a\";","module.exports = __webpack_public_path__ + \"static/media/mummy.944542d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/mummy-reply.ede27c51.m4a\";","module.exports = __webpack_public_path__ + \"static/media/spider.0099f7d8.m4a\";","module.exports = __webpack_public_path__ + \"static/media/spider-sound.694ac269.mp3\";","module.exports = __webpack_public_path__ + \"static/media/spider_reply.f1a45605.m4a\";","module.exports = __webpack_public_path__ + \"static/media/skrewt.5f936bde.m4a\";","module.exports = __webpack_public_path__ + \"static/media/skrewt.4c43b837.wav\";","module.exports = __webpack_public_path__ + \"static/media/skrewt_reply.e2984af9.m4a\";","module.exports = __webpack_public_path__ + \"static/media/level5.da417bee.m4a\";","module.exports = __webpack_public_path__ + \"static/media/prophecy.a0d4f2ca.m4a\";","module.exports = __webpack_public_path__ + \"static/media/thunder.3eee9127.wav\";","module.exports = __webpack_public_path__ + \"static/media/hermione.1f6b6c38.m4a\";","module.exports = __webpack_public_path__ + \"static/media/hermione_reply.97862182.m4a\";","module.exports = __webpack_public_path__ + \"static/media/pettigrew.61b5743e.m4a\";","module.exports = __webpack_public_path__ + \"static/media/pettigrew_reply.e40107a5.m4a\";","module.exports = __webpack_public_path__ + \"static/media/neville.b552d5cb.m4a\";","module.exports = __webpack_public_path__ + \"static/media/neville_reply.98384f18.m4a\";","module.exports = __webpack_public_path__ + \"static/media/snape.eaf8c39c.m4a\";","module.exports = __webpack_public_path__ + \"static/media/snape_reply.187bbddb.m4a\";","module.exports = __webpack_public_path__ + \"static/media/ending.bd812949.m4a\";","module.exports = __webpack_public_path__ + \"static/media/cheering.03113ce8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/level3.4adcf5dc.m4a\";","module.exports = __webpack_public_path__ + \"static/media/rattling.09ced0f5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/torture_reply.eb559973.m4a\";","module.exports = __webpack_public_path__ + \"static/media/dancing_reply.f47f0308.m4a\";","module.exports = __webpack_public_path__ + \"static/media/funny_reply.1a24b2a4.m4a\";","module.exports = __webpack_public_path__ + \"static/media/tickle_reply.ee6de6b0.m4a\";","module.exports = __webpack_public_path__ + \"static/media/torture.5eeee4e3.mp3\";","module.exports = __webpack_public_path__ + \"static/media/tickle.a48c8b72.m4a\";","module.exports = __webpack_public_path__ + \"static/media/dancing.b4cd7f09.m4a\";","module.exports = __webpack_public_path__ + \"static/media/laugh.2f657ee2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/torture_spell.5491da5c.m4a\";","module.exports = __webpack_public_path__ + \"static/media/tickle_spell.1cfcf2e1.m4a\";","module.exports = __webpack_public_path__ + \"static/media/dancing_spell.aa9eb64f.m4a\";","module.exports = __webpack_public_path__ + \"static/media/funny_spell.38e24bbe.m4a\";","module.exports = __webpack_public_path__ + \"static/media/chamber_intro.9c6a1f84.m4a\";","module.exports = __webpack_public_path__ + \"static/media/sorting_hat_1.ba70dac7.m4a\";","module.exports = __webpack_public_path__ + \"static/media/sorting_hat_2.963afbc1.m4a\";","module.exports = __webpack_public_path__ + \"static/media/sword.7fcbdabc.m4a\";","module.exports = __webpack_public_path__ + \"static/media/throw_hat.43c268fe.m4a\";","module.exports = __webpack_public_path__ + \"static/media/hat_reply.1ebddacb.m4a\";","module.exports = __webpack_public_path__ + \"static/media/powers_reply.0548034e.m4a\";","module.exports = __webpack_public_path__ + \"static/media/sword_reply.f6b7f5ba.m4a\";","module.exports = __webpack_public_path__ + \"static/media/gryffindor_reply.072746d1.m4a\";","module.exports = __webpack_public_path__ + \"static/media/snakehiss2.d0f68fa5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/swordraw.ae4e6a47.mp3\";","module.exports = __webpack_public_path__ + \"static/media/instructions.600e069e.m4a\";","module.exports = __webpack_public_path__ + \"static/media/game_entrance.ae04eae6.m4a\";","module.exports = __webpack_public_path__ + \"static/media/opening.a902eaa6.m4a\";","module.exports = __webpack_public_path__ + \"static/media/level4announce.ac8f634c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bensound-epic.780462c2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/landing.46003aed.m4a\";","module.exports = __webpack_public_path__ + \"static/media/HarryP-MVZ6w.181ef9a7.ttf\";","import React, {useLayoutEffect, useEffect, useState, useCallback} from 'react';\nimport Sound from 'react-sound';\nimport '../entrance.css';\nimport magicSound from '../audio/zapsplat_fantasy_reversed_backwards_magical_glissando_001_46178.mp3';\nimport entranceInstructions from '../audio/opening.m4a';\nimport maze_entrance from '../audio/maze_entrance.m4a'\n\nexport function Entrance(props) {\n\n   const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n   const maze_march = \"https://ia600104.us.archive.org/23/items/cd_harry-potter-and-the-goblet-of-fire_patrick-doyle-jarvis-cocker-jason-buckle/disc1/16.%20Patrick%20Doyle%20-%20Hogwarts%27%20March_sample.mp3\";\n\n   const handleKey = useCallback((e) => {\n         var event = window.event ? window.event : e;\n            console.log(event);\n          switch(e.key) {\n                    case \" \":\n                    handleViewChange(\"level-one\");\n                    break;\n                    }\n    }, [props]);\n\n   useLayoutEffect(() => {\n       document.addEventListener(\"keydown\", handleKey);\n             return function cleanup() {\n             document.removeEventListener(\"keydown\", handleKey);\n           };\n     });\n\n    const handleExitClick = () => {\n        props.exit();\n    };\n\n    const handleNextClick = () => {\n        props.handleViewChange('level-one');\n    };\n\n   return (\n   <div id=\"entrance-image\">   \n        <div id=\"d-landing\">\n            <h id=\"h-entrance\" >\n                  Welcome to the Maze\n            </h>\n            <p id=\"p-landing\">\n              So you think you are ready to tackle the maze...do you, wizard? Well, earlier this evening Professor Moody placed the Triwizard cup in the maze. Only he knows where to find it. Your task will be to enter the maze and face the dangers that lie there. \n              In order to win, you want to be the first to find the cup. But first, you must make it out...ALIVE! \n              To begin your quest, press the space bar.\n            </p>\n                       <Sound\n                           url={maze_march}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={true}\n                           volume={25}\n                       />\n                       <Sound\n                           url={maze_entrance}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={50}\n                       />\n          </div>\n        </div>\n   );\n}\n","import React, {useLayoutEffect, useEffect, useCallback, useState} from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css';\nimport magicSound from '../audio/zapsplat_fantasy_reversed_backwards_magical_glissando_001_46178.mp3';\nimport devils_snare from '../audio/devils_snare2.m4a';\nimport rain_spell from '../audio/devilsSnare/rain_spell.m4a';\nimport rain_sound from '../audio/devilsSnare/rain_soud.mov';\nimport explosion from '../audio/devilsSnare/explosion.mov';\nimport explosion_spell from '../audio/devilsSnare/explosion_spell.m4a';\nimport sunlight_spell from '../audio/devilsSnare/sunlight_spell.m4a';\nimport scream_spell from '../audio/devilsSnare/scream_spell.m4a';\nimport scream_sound from '../audio/devilsSnare/scream.mov';\nimport explosion_reply from '../audio/devilsSnare/explosion_reply.m4a';\nimport rain_reply from '../audio/devilsSnare/rain_reply.m4a';\nimport sunlight_reply from '../audio/devilsSnare/sunlight_reply.m4a';\nimport scream_reply from '../audio/devilsSnare/scream_reply.m4a';\n\n\nfunction RenderReply(props) {\n    return (\n        <React.Fragment>\n             <Sound\n               url={props.reply}\n               playStatus={Sound.status.PLAYING}\n               autoLoad={true}\n               loop={false}\n               volume={100}\n              />\n        </React.Fragment>\n    );\n}\n\nexport function DevilsSnare(props) {\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n    const snare_music = \"https://ia601000.us.archive.org/9/items/cd_harry-potter-and-the-sorcerers-stone-origi_john-williams/disc1/15.%20John%20Williams%20-%20In%20the%20Devil%27s%20Snare%20-%20The%20Flying%20Keys_sample.mp3\";\n\n    const intro = <React.Fragment>\n      <Sound\n         url={devils_snare}\n         playStatus={Sound.status.PLAYING}\n         autoLoad={true}\n         loop={false}\n         volume={50}\n      />\n        <Sound\n          url={snare_music}\n          playStatus={Sound.status.PLAYING}\n          autoLoad={true}\n          loop={true}\n         volume={75}\n         />\n                  </React.Fragment>;\n\n\n\n\n    const[sound, setSound] = useState(intro);\n    const[correct, setCorrect] = useState(false);\n\n    const rain = <React.Fragment>\n                                  <Sound\n                                     url={rain_spell}\n                                     playStatus={Sound.status.PLAYING}\n                                     autoLoad={true}\n                                     loop={false}\n                                     volume={75} />\n                                  <Sound\n                                     url={rain_sound}\n                                     playStatus={Sound.status.PLAYING}\n                                     autoLoad={true}\n                                     loop={false}\n                                     volume={75} />\n                                   </React.Fragment>;\n\n    const explosion_comp =   <React.Fragment>\n                                 <Sound\n                                    url={explosion_spell}\n                                    playStatus={Sound.status.PLAYING}\n                                    autoLoad={true}\n                                    loop={false}\n                                    volume={100} />\n                                 <Sound\n                                    url={explosion}\n                                    playStatus={Sound.status.PLAYING}\n                                    autoLoad={true}\n                                    loop={false}\n                                    volume={25} />\n                                  </React.Fragment>;\n\n    const sunlight = <React.Fragment>\n                       <Sound\n                          url={sunlight_spell}\n                          playStatus={Sound.status.PLAYING}\n                          autoLoad={true}\n                          loop={false}\n                          volume={100} />\n                     </React.Fragment>;\n\n    const scream = <React.Fragment>\n                        <Sound\n                           url={scream_spell}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={100} />\n                        <Sound\n                           url={scream_sound}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={25} />\n                    </React.Fragment>;\n\n    const handleRain = () => {\n        console.log(document.activeElement.id);\n       setSound(<RenderReply reply={rain_reply}/>);\n    }\n\n    const handleExplosion= () => {\n        setSound(<RenderReply reply={explosion_reply}/>);\n    }\n\n    const finishedLevel = () => {\n        handleViewChange('level-two');\n    }\n\n    const handleSunlight = () => {\n       setSound(<Sound\n                  url={sunlight_reply}\n                  playStatus={Sound.status.PLAYING}\n                  autoLoad={true}\n                  loop={false}\n                  volume={100}\n                   onFinishedPlaying={finishedLevel}\n                />);\n    }\n\n    const handleScream = () => {\n        setSound(<RenderReply reply={scream_reply}/>);\n    }\n\n    const handleSpace = () => {\n       let id =  console.log(document.activeElement.id);\n       switch(id) {\n       case \"rain\":\n         handleRain();\n       break;\n       case \"sunlight\":\n       handleSunlight();\n       break;\n       case \"explosion\":\n       handleExplosion();\n       break;\n       case \"scream\":\n       handleScream();\n       break;\n       }\n    }\n\n    const handleSelect = (name) => {\n        console.log(name);\n        switch(name) {\n            case -1:\n            setSound(rain);\n            break;\n            case 4:\n            handleSelect(-1);\n            break;\n            case 1:\n            setSound(explosion_comp);\n            break;\n            case 2:\n            setSound(sunlight);\n            break;\n            case 3:\n            setSound(scream);\n            break;\n        }\n    }\n\n      const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n           case \"Tab\":\n           handleSelect(document.activeElement.tabIndex)\n           break;\n           case \" \":\n           handleSpace();\n           break;\n           case \"Escape\":\n           props.exit();\n           }\n      }, [props]);\n\n     useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n    return (\n    <div id=\"devils_snare-image\">\n       <div id=\"d-landing\">\n                      <h id=\"h-entrance\" >\n                            Welcome to Level One\n                      </h>\n                      <p id=\"p-landing\">\n                        Oh no! You have slipped and fallen into a Devil’s Snare pit trap.\n                        Devil’s snare plant consists of thick, snake-like vines that twist\n                        around it’s victims unless they remember to relax and stop moving.\n                        The Devil’s Snare plant likes a dark, damp environment. You have\n                        already moved too much and the Devil’s snare plant has a strong grip\n                        around you, you must use a spell to escape!\n                      </p>\n                       <div id=\"d-options\">\n                       <button id=\"rain\" tabIndex = \"1\" onClick={handleRain}> Rain Spell </button>\n                       <button tabIndex=\"2\" id=\"explosion\" onClick={handleExplosion}>Explosion Spell</button>\n                       <button tabIndex=\"3\" id=\"sunlight\" onClick={handleSunlight}>Sunlight Spell</button>\n                       <button tabIndex=\"4\" id=\"scream\" onClick={handleScream}>Scream Spell</button>\n                       </div>\n                       {sound}\n                    </div>\n    </div>\n    );\n}","import React, {useLayoutEffect, useEffect, useCallback, useState} from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css';\nimport sphinxInstructions from '../audio/sphinx/level4.mov';\nimport level4announce from '../audio/sphinx/level4announce.mp3'\nimport hiss from \"../audio/sphinx/hiss.mp3\";\nimport snake from \"../audio/sphinx/snakepit.wav\";\nimport spacebar from \"../audio/sphinx/spacebar.m4a\";\n\n\nfunction RenderReply(props) {\n    return (\n        <React.Fragment>\n             <Sound\n               url={props.reply}\n               playStatus={Sound.status.PLAYING}\n               autoLoad={true}\n               loop={false}\n               volume={100}\n              />\n        </React.Fragment>\n    );\n}\n\nexport function Sphinx(props) {\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n    const finishedinstructions = () => {\n      setSound(<React.Fragment><Sound\n        url={spacebar}\n        playStatus={Sound.status.PLAYING}\n        // onFinishedPlaying={finishedspace}\n        autoLoad={true}\n        loop={false}\n        volume={100}\n        playbackRate='.8'/>\n        <Sound\n          url={snake}\n          playStatus={Sound.status.PLAYING}\n          autoLoad={true}\n          loop={true}\n          volume={100}\n          playbackRate='.8'\n        /></React.Fragment>);\n      \n    }\n\n    // const finishedspace = () => {\n    //     setSound(<Sound\n    //       url={snake}\n    //       playStatus={Sound.status.PLAYING}\n    //       autoLoad={true}\n    //       loop={true}\n    //       volume={100}\n    //       playbackRate='.8'\n    //     />);\n    //     }\n\n    const intro = <React.Fragment>\n                    <Sound\n                    url={sphinxInstructions}\n                    playStatus={Sound.status.PLAYING}\n                    onFinishedPlaying={finishedinstructions}\n                    autoLoad={true}\n                    loop={false}\n                    playbackRate=\".7\"\n                    volume={100} />\n                    <Sound\n                           url={snake}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={true}\n                           volume=\"40\"\n                       />\n                       <Sound\n                           url={hiss}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume=\"80\"\n                       />\n                    </React.Fragment>;\n\n    const[sound, setSound] = useState(intro);\n    \n\n    const handleSpace = () => {\n        handleViewChange('riddle');\n    }\n\n\n      const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n           case \" \":\n           handleSpace();\n           break;\n           case \"Escape\":\n           props.exit();\n           }\n      }, [props]);\n\n     useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n    return (\n        <div id=\"sphinx-image\">\n        <div id=\"d-landing\">\n                    <h id=\"h-entrance\" >\n                          Welcome to Level Four\n                    </h>\n                    <p id=\"p-landing\">\n                    You are very near your goal. The quickest way is past me, a powerful sphinx.\n                     I will not move, no, not unless you can answer my riddle. \n                     Answer on your first guess — I let you pass. Answer wrongly — I attack. \n                     Remain silent — I will let you walk away from me unscathed. \n                     Press the spacebar to hear the riddle\n                    </p>\n                    <div id=\"d-button-holder\">\n                     </div>\n                     {sound}\n                     {sound}\n                         \n            </div>\n          </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n// // import React, {useLayoutEffect, useEffect, useCallback, useState} from 'react';\n// // // import sphinxInstructions from '../audio/sphinx/level4.mov';\n// // // import level4announce from '../audio/sphinx/level4announce.mp3'\n// // // import hiss from \"../audio/sphinx/hiss.mp3\";\n// // // import snake from \"../audio/sphinx/snakepit.wav\";\n// // // import spacebar from \"../audio/sphinx/spacebar.m4a\";\n// // import Sound from 'react-sound';\n\n\n// function RenderReply(props) {\n//     return (\n//         <React.Fragment>\n//              <Sound\n//                url={props.reply}\n//                playStatus={Sound.status.PLAYING}\n//                autoLoad={true}\n//                loop={false}\n//                volume={100}\n//               />\n//         </React.Fragment>\n//     );\n// }\n\n\n// export function Sphinx(props) {\n    \n\n//     const handleExitClick = () => {\n//         props.exit();\n//     }\n//     const finishedinstructions = () => {\n//         setSound(<RenderReply reply={spacebar}/>);\n        \n//       }\n//     const intro = <React.Fragment>\n//                     <Sound\n//                            url={snake}\n//                            playStatus={Sound.status.PLAYING}\n//                            autoLoad={true}\n//                            loop={true}\n//                            volume=\"40\"\n//                        />\n//                        <Sound\n//                            url={hiss}\n//                            playStatus={Sound.status.PLAYING}\n//                            autoLoad={true}\n//                            loop={false}\n//                            volume=\"10\"\n//                        />\n//                        <Sound\n//                            url={sphinxInstructions}\n//                            playStatus={Sound.status.PLAYING}\n//                            onFinishedPlaying={finishedinstructions}\n//                            autoLoad={true}\n//                            loop={false}\n//                            volume=\"100\"\n//                            pitch=\"high\"\n//                            playbackRate=\".8\"\n//                        />\n//                     </React.Fragment>;\n  \n\n//     const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n//     const[sound, setSound] = useState(intro);\n\n//       const handleKey = useCallback((e) => {\n//            var event = window.event ? window.event : e;\n//               console.log(event);\n//            switch(e.key) {\n//            case \" \":\n//                 handleViewChange('riddle');\n//                 break;\n//            case \"Escape\":\n//                 props.exit();\n//            }\n//       }, [props]);\n\n      \n//      useLayoutEffect(() => {\n//          document.addEventListener(\"keydown\", handleKey);\n//                return function cleanup() {\n//                document.removeEventListener(\"keydown\", handleKey);\n//              };\n//        });\n\n\n//     return (\n//       <div id=\"sphinx-image\">\n//       <div id=\"d-landing\">\n//                   <h id=\"h-entrance\" >\n//                         Welcome to Level Four\n//                   </h>\n//                   <p id=\"p-landing\">\n//                   You are very near your goal. The quickest way is past me, a powerful sphinx.\n//                    I will not move, no, not unless you can answer my riddle. \n//                    Answer on your first guess — I let you pass. Answer wrongly — I attack. \n//                    Remain silent — I will let you walk away from me unscathed. \n//                    Press the spacebar to hear the riddle\n//                   </p>\n//                   <div id=\"d-button-holder\">\n//                   <button id=\"b-landing\">\n//                         Next\n//                         </button>\n//                         <button id=\"b-landing\" onClick={handleExitClick}>\n//                          Exit Maze\n//                         </button>\n//                    </div>\n                       \n//           </div>\n//         </div>\n//     );\n// }","import React, {useLayoutEffect, useEffect, useCallback, useState} from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css';\nimport riddle from \"../audio/sphinx/riddle.mp3\";\nimport snake from \"../audio/sphinx/snakepit.wav\";\n\nimport dementor_answer from '../audio/sphinx/dementor_answer.m4a';\nimport dementor_sound from '../audio/sphinx/dementor_sound.wav';\nimport dementor_reply from '../audio/sphinx/dementor_reply.m4a';\n\nimport mummy_answer from '../audio/sphinx/mummy.m4a';\nimport mummy_sound from '../audio/sphinx/mummy.wav';\nimport mummy_reply from '../audio/sphinx/mummy-reply.m4a';\n\nimport spider_answer from '../audio/sphinx/spider.m4a';\nimport spider_sound from '../audio/sphinx/spider-sound.mp3';\nimport spider_reply from '../audio/sphinx/spider_reply.m4a';\n\nimport skrewt_answer from '../audio/sphinx/skrewt.m4a';\nimport skrewt_sound from '../audio/sphinx/skrewt.wav';\nimport skrewt_reply from '../audio/sphinx/skrewt_reply.m4a';\n\n\nfunction RenderReply(props) {\n    return (\n        <React.Fragment>\n             <Sound\n               url={props.reply}\n               playStatus={Sound.status.PLAYING}\n               autoLoad={true}\n               loop={false}\n               volume={100}\n              />\n        </React.Fragment>\n    );\n}\n\nexport function Riddle(props) {\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n    const intro = <React.Fragment>\n                    <Sound\n                    url={riddle}\n                    playStatus={Sound.status.PLAYING}\n                    autoLoad={true}\n                    loop={false}\n                    playbackRate=\".7\"\n                    volume={100} />\n                    <Sound\n                    url={snake}\n                    playStatus={Sound.status.PLAYING}\n                    autoLoad={true}\n                    loop={true}\n                    volume={50} />\n                    </React.Fragment>;\n\n    const[sound, setSound] = useState(intro);\n    const[correct, setCorrect] = useState(false);\n\n    const mummy = <React.Fragment>\n                    <Sound\n                        url={mummy_answer}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={75} />\n                    <Sound\n                        url={mummy_sound}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={75} />\n                </React.Fragment>;\n\n    const spider =  <React.Fragment>\n                        <Sound\n                        url={spider_answer}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={100} \n                        playbackRate='.5'/>\n                        <Sound\n                        url={spider_sound}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={25} />\n                    </React.Fragment>;\n\n    const skrewt = <React.Fragment>\n                        <Sound\n                          url={skrewt_answer}\n                          playStatus={Sound.status.PLAYING}\n                          autoLoad={true}\n                          loop={false}\n                          volume={100}\n                          playbackRate='.8' />\n                          <Sound\n                          url={skrewt_sound}\n                          playStatus={Sound.status.PLAYING}\n                          autoLoad={true}\n                          loop={false}\n                          volume={30} />\n                    </React.Fragment>;\n\n    const dementor = <React.Fragment>\n                        <Sound\n                           url={dementor_sound}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={25} />\n                        <Sound\n                           url={dementor_answer}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={100} />\n                    </React.Fragment>;\n\n    const handleMummy = () => {\n        console.log(document.activeElement.id);\n        // While a mummy can be a disguise, this is not the right answer. Answer again quickly before the sphinx attacks you!\n       setSound(<RenderReply reply={mummy_reply}/>);\n    }\n\n    const handleSpider= () => {\n        // A spy will try to find out your secrets, and \"er\" is a sound made when searching for a word. \n        // The middle of middle is “i”, and the end of end is “d”, so this forms the word spider! you are correct!\n        setSound(<Sound\n            url={spider_reply}\n            playStatus={Sound.status.PLAYING}\n            autoLoad={true}\n            loop={false}\n            volume={100}\n            onFinishedPlaying={finishedLevel}\n            playbackRate='.8'\n          />);\n    }\n\n    const handleSkrewt = () => {\n        // A blast-ended skrewt is more likely to burn you than find out your secrets! Answer again quickly before the sphinx attacks you!\n       setSound(<Sound\n                  url={skrewt_reply}\n                  playStatus={Sound.status.PLAYING}\n                  autoLoad={true}\n                  loop={false}\n                  volume={100}\n                />);\n    }\n\n    const handleDementor = () => {\n        // A dementor is a creature you wouldn't want to kiss, as you would lose your soul! But \"e\" is the end of middle, and the beginning of end.\n        setSound(<RenderReply reply={dementor_reply}/>);\n    }\n\n    const finishedLevel = () => {\n        handleViewChange('level-five');\n    }\n\n    const handleSpace = () => {\n       let id =  console.log(document.activeElement.id);\n       switch(id) {\n       case \"mummy\":\n           handleMummy();\n           break;\n       case \"spider\":\n           handleSpider();\n           break;\n       case \"skrewt\":\n           handleSkrewt();\n           break;\n       case \"dementor\":\n           handleDementor();\n           break;\n       }\n    }\n\n    const handleSelect = (name) => {\n        console.log(name);\n        switch(name) {\n            case -1:\n            setSound(mummy);\n            break;\n            case 4:\n            handleSelect(-1);\n            break;\n            case 1:\n            setSound(spider);\n            break;\n            case 2:\n            setSound(dementor);\n            break;\n            case 3:\n            setSound(skrewt);\n            break;\n        }\n    }\n\n      const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n           case \"Tab\":\n           handleSelect(document.activeElement.tabIndex)\n           break;\n           case \" \":\n           handleSpace();\n           break;\n           case \"Escape\":\n           props.exit();\n           }\n      }, [props]);\n\n     useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n    return (\n    <div id=\"sphinx-image\">\n       <div id=\"d-landing\">\n                      <h id=\"h-entrance\" >\n                            Answer the Sphinx's Riddle\n                      </h>\n                      <p id=\"p-landing\">\n                      First think of the person who lives in disguise,<br></br>\n                       Who deals in secrets and tells naught but lies. <br></br>\n                      Next, tell me what’s always the last thing to mend, <br></br>\n                      The middle of middle and end of the end? <br></br>\n                       And finally give me the sound often heard <br></br>\n                      During the search for a hard-to-find word. <br></br>\n                       Now string them together, and answer me this, <br></br>\n                       Which creature would you be unwilling to kiss? <br></br>\n                      </p>\n                        <div id=\"d-options\">\n                       <button id=\"mummy\" tabIndex = \"1\" onClick={handleMummy}> Mummy </button>\n                       <button tabIndex=\"2\" id=\"spider\" onClick={handleSpider}>Spider</button>\n                       <button tabIndex=\"3\" id=\"dementor\" onClick={handleDementor}>Dementor</button>\n                       <button tabIndex=\"4\" id=\"skrewt\" onClick={handleSkrewt}>Blast-Ended Skrewt</button>\n                       </div>\n                       {sound}\n                       {sound}\n                    </div>\n    </div>\n    );\n}","import React, {useLayoutEffect, useEffect, useCallback, useState} from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css';\nimport prophecyinstructions from '../audio/prophecy/level5.m4a';\nimport theprophecy from '../audio/prophecy/prophecy.m4a';\nimport thunder from \"../audio/prophecy/thunder.wav\";\nimport foreboding from \"../audio/prophecy/foreboding.wav\"\n// \"Something Evil Approaches, A.wav\" by InspectorJ (www.jshaw.co.uk) of Freesound.org\n\nimport hermione_g from '../audio/prophecy/hermione.m4a';\nimport hermione_reply from '../audio/prophecy/hermione_reply.m4a';\n\nimport p_pettigrew from '../audio/prophecy/pettigrew.m4a';\nimport pettigrew_reply from '../audio/prophecy/pettigrew_reply.m4a';\n\nimport neville_l from '../audio/prophecy/neville.m4a';\nimport neville_reply from '../audio/prophecy/neville_reply.m4a';\n\nimport s_snape from '../audio/prophecy/snape.m4a';\nimport snape_reply from '../audio/prophecy/snape_reply.m4a';\n\n\nfunction RenderReply(props) {\n    return (\n        <React.Fragment>\n             <Sound\n               url={props.reply}\n               playStatus={Sound.status.PLAYING}\n               autoLoad={true}\n               loop={false}\n               volume={100}\n              />\n        </React.Fragment>\n    );\n}\n\nexport function Prophecy(props) {\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n    const finishedinstructions = () => {\n      setSound(<Sound\n        url={theprophecy}\n        playStatus={Sound.status.PLAYING}\n        autoLoad={true}\n        loop={false}\n        volume={100}\n        onFinishedPlaying={finishedprophecy}\n        playbackRate='.8'\n      />);\n      \n    }\n\n    const finishedprophecy = () => {\n      setSound(<RenderReply reply={foreboding}/>);\n    }\n\n    const intro = <React.Fragment>\n                    <Sound\n                    url={prophecyinstructions}\n                    playStatus={Sound.status.PLAYING}\n                    onFinishedPlaying={finishedinstructions}\n                    autoLoad={true}\n                    loop={false}\n                    playbackRate=\".7\"\n                    volume={100} />\n                    <Sound\n                           url={foreboding}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={true}\n                           volume=\"40\"\n                       />\n                       <Sound\n                           url={thunder}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume=\"80\"\n                       />\n                    </React.Fragment>;\n    \n    const hermione = <React.Fragment>\n                    <Sound\n                        url={hermione_g}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={75} />\n                </React.Fragment>;\n\n    const pettigrew =  <React.Fragment>\n                        <Sound\n                        url={p_pettigrew}\n                        playStatus={Sound.status.PLAYING}\n                        autoLoad={true}\n                        loop={false}\n                        volume={100} \n                        playbackRate='.5'/>\n                    </React.Fragment>;\n\n    const neville = <React.Fragment>\n                        <Sound\n                          url={neville_l}\n                          playStatus={Sound.status.PLAYING}\n                          autoLoad={true}\n                          loop={false}\n                          volume={100}\n                          playbackRate='.8' />\n                          \n                    </React.Fragment>;\n\n    const snape = <React.Fragment>\n                        <Sound\n                           url={s_snape}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={100} />\n                    </React.Fragment>;\n\n    const handleHermione = () => {\n      // Hermione hates Divination, and the prophecy refers to a \"he.\" Try again!\n      setSound(<RenderReply reply={hermione_reply}/>);\n    }\n    const handlePettigrew = () => {\n      // Peter has been the subject of a different prophecy, but not this one. Try again!\n       setSound(<RenderReply reply={pettigrew_reply}/>);\n    }\n\n    const handleNeville= () => {\n        // Neville was born at the end of July, and his parents defied Lord Voldemort as members of the Order of the Phoenix. The prophecy could have been about him. Good job!\n        setSound(<Sound\n            url={neville_reply}\n            playStatus={Sound.status.PLAYING}\n            autoLoad={true}\n            loop={false}\n            volume={100}\n            onFinishedPlaying={finishedLevel}\n            playbackRate='.8'\n          />);\n    }\n\n    const handleSnape = () => {\n      // This prophecy isn't about Snape, but he did overhear a part of it in the Hogs Head. Try again!\n       setSound(<Sound\n                  url={snape_reply}\n                  playStatus={Sound.status.PLAYING}\n                  autoLoad={true}\n                  loop={false}\n                  volume={100}\n                />);\n    }\n\n\n    const finishedLevel = () => {\n        handleViewChange('ending');\n    }\n\n    const[sound, setSound] = useState(intro);\n    const[correct, setCorrect] = useState(false);\n\n    const handleSpace = () => {\n       let id =  console.log(document.activeElement.id);\n       switch(id) {\n       case \"hermione\":\n           handleHermione();\n           break;\n       case \"pettigrew\":\n           handlePettigrew();\n           break;\n       case \"neville\":\n           handleNeville();\n           break;\n       case \"snape\":\n           handleSnape();\n           break;\n       }\n    }\n\n    const handleSelect = (name) => {\n        console.log(name);\n        switch(name) {\n            case -1:\n            setSound(hermione);\n            break;\n            case 4:\n            handleSelect(-1);\n            break;\n            case 1:\n            setSound(pettigrew);\n            break;\n            case 2:\n            setSound(neville);\n            break;\n            case 3:\n            setSound(snape);\n            break;\n        }\n    }\n\n      const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n          //  case \"ArrowRight\":\n          //    handleViewChange('level-five');\n          //  break;\n          //  case \"ArrowLeft\":\n          //  handleViewChange('enter');\n          //  break;\n           case \"Tab\":\n           handleSelect(document.activeElement.tabIndex)\n           break;\n           case \" \":\n           handleSpace();\n           break;\n           case \"Escape\":\n           props.exit();\n           }\n      }, [props]);\n\n     useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n    return (\n    <div id=\"prophecy-image\">\n       <div id=\"d-landing\">\n                      <h id=\"h-entrance\" >\n                            Who could the prophecy be about?\n                      </h>\n                      <p id=\"p-landing\">\n                      You are now at the final challenge. From the maze, you have been transported to the Hall of Prophecies. \n                      The walls are crashing down and the prophecy orbs are rolling off their shelves! \n                      One of the orbs near you shatters and you can hear a thrilling prophecy. \n                      It seems to be about Harry Potter, but who else could it be about? You must answer correctly to win the TriWizard Tournament!\n                      This is the prophecy:\n\n                      The one with the power to vanquish the Dark Lord approaches... born to those who have thrice defied him, \n                      born as the seventh month dies... and the Dark Lord will mark him as his equal, but he will have power the Dark Lord knows not... \n                      and either must die at the hand of the other for neither can live while the other survives... \n                      the one with the power to vanquish the Dark Lord will be born as the seventh month dies... \n                      </p>\n                        <div id=\"d-options\">\n                       <button id=\"hermione\" tabIndex = \"1\" onClick={handleHermione}> Hermione Granger </button>\n                       <button tabIndex=\"2\" id=\"pettigrew\" onClick={handlePettigrew}>Peter Pettigrew</button>\n                       <button tabIndex=\"3\" id=\"neville\" onClick={handleNeville}>Neville Longbottom</button>\n                       <button tabIndex=\"4\" id=\"snape\" onClick={handleSnape}>Severus Snape</button>\n                       </div>\n                       {sound}\n                    </div>\n    </div>\n    );\n}\n\n\n\n\n\n// import React, {useLayoutEffect, useEffect, useCallback} from 'react';\n// import prophecyinstructions from '../audio/level4.mp3';\n// import thunder from \"../audio/prophecy/thunder.wav\";\n// import foreboding from \"../audio/prophecy/foreboding.wav\"\n// // \"Something Evil Approaches, A.wav\" by InspectorJ (www.jshaw.co.uk) of Freesound.org\n// import Sound from 'react-sound';\n\n// export function Prophecy(props) {\n\n//     const handleExitClick = () => {\n//         props.exit();\n//     }\n\n//     const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n//       const handleKey = useCallback((e) => {\n//            var event = window.event ? window.event : e;\n//               console.log(event);\n//            switch(e.key) {\n//            case \"ArrowRight\":\n//                handleViewChange('ending');\n//            console.log(\"right arrow key pressed\");\n//            break;\n//            case \"ArrowLeft\":\n//            handleViewChange('enter');\n//            }\n//       }, [props]);\n\n//      useLayoutEffect(() => {\n//          document.addEventListener(\"keydown\", handleKey);\n//                return function cleanup() {\n//                document.removeEventListener(\"keydown\", handleKey);\n//              };\n//        });\n\n\n//     return (\n//       <div id=\"prophecy-image\">\n\n//       <div id=\"d-landing\">\n//                   <h id=\"h-entrance\" >\n//                         Welcome to Level Five\n//                   </h>\n//                   <p id=\"p-landing\">\n//                     WHO IS THE PROPHECY ABOUT??????\n//                   </p>\n//                   <div id=\"d-button-holder\">\n//                   <button id=\"b-landing\">\n//                               Next\n//                               </button>\n//                               <button id=\"b-landing\" onClick={handleExitClick}>\n//                                Exit Maze\n//                               </button>\n//                   </div>\n//                   <Sound\n//                            url={foreboding}\n//                            playStatus={Sound.status.PLAYING}\n//                            autoLoad={true}\n//                            loop={true}\n//                            volume=\"40\"\n//                        />\n//                        <Sound\n//                            url={thunder}\n//                            playStatus={Sound.status.PLAYING}\n//                            autoLoad={true}\n//                            loop={false}\n//                            volume=\"80\"\n//                        />\n//                        <Sound\n//                            url={prophecyinstructions}\n//                            playStatus={Sound.status.PLAYING}\n//                            autoLoad={true}\n//                            loop={false}\n//                            volume=\"100\"\n//                            playbackRate=\".7\"\n//                        />\n//                 </div>\n//                 </div>\n//     );\n// }","import React, {useLayoutEffect, useEffect, useCallback} from 'react';\nimport Sound from 'react-sound';\nimport exitInstructions from '../audio/ending.m4a';\nimport clapping from \"../audio/cheering.mp3\";\n\nexport function Ending(props) {\n\n    const handleExitClick = () => {\n        props.exit();\n    }\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n      const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n           case \"ArrowRight\":\n              handleViewChange('landing');\n           console.log(\"right arrow key pressed\");\n           break;\n           case \"ArrowLeft\":\n           handleViewChange('enter');\n           case \"Escape\":\n           props.exit();\n           break;\n           }\n      }, [props]);\n\n     useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n\n    return (\n      <div id=\"exit-image\">\n        <div id=\"d-landing\">\n                  <h id=\"h-entrance\" >\n                        You exited the maze!!\n                  </h>\n                  <p id=\"p-landing\">\n                  Congratulations, wizard, you made it out alive! The Triwizard cup is yours! \n                  You may have passed this test but you will have many more to face, young wizard. \n                  Onward and upward!\n                  </p>\n                  <div id=\"d-button-holder\">\n                      <button id=\"b-landing\" onClick={handleExitClick}>\n                           Start Over\n                        </button>\n                  </div>\n                </div>\n                <Sound\n                           url={exitInstructions}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume=\"100\"\n                       />\n                <Sound\n                           url={clapping}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume=\"5\"\n                       />\n      </div>\n    );\n}","import React, {useLayoutEffect, useState, useCallback} from 'react';\nimport Sound from 'react-sound';\nimport boggartInstructions from '../audio/boggart/level3.m4a';\nimport rattling from \"../audio/boggart/rattling.mp3\";\nimport torture_reply from \"../audio/boggart/torture_reply.m4a\";\nimport dancing_reply from \"../audio/boggart/dancing_reply.m4a\";\nimport funny_reply from \"../audio/boggart/funny_reply.m4a\";\nimport tickle_reply from \"../audio/boggart/tickle_reply.m4a\";\nimport torture from \"../audio/boggart/torture.mp3\";\nimport tickle from \"../audio/boggart/tickle.m4a\";\nimport dancing from \"../audio/boggart/dancing.m4a\";\nimport funny from \"../audio/boggart/laugh.mp3\";\nimport torture_spell from \"../audio/boggart/torture_spell.m4a\";\nimport tickle_spell from \"../audio/boggart/tickle_spell.m4a\";\nimport dancing_spell from \"../audio/boggart/dancing_spell.m4a\";\nimport funny_spell from \"../audio/boggart/funny_spell.m4a\";\n\nfunction RenderReply(props) {\n    return (\n        <React.Fragment>\n             <Sound\n               url={props.reply}\n               playStatus={Sound.status.PLAYING}\n               autoLoad={true}\n               loop={false}\n               volume={100}\n              />\n        </React.Fragment>\n    );\n}\n\nexport function Boggart(props) {\n\n    const handleExitClick = () => {\n        props.exit();\n    }\n\n    const intro = <React.Fragment>\n      <Sound\n         url={rattling}\n         playStatus={Sound.status.PLAYING}\n         autoLoad={true}\n         loop={true}\n         volume={75}\n      />\n        <Sound\n          url={boggartInstructions}\n          playStatus={Sound.status.PLAYING}\n          autoLoad={true}\n          loop={false}\n         volume={75}\n         />\n      </React.Fragment>;\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n    const[sound, setSound] = useState(intro);\n    const[correct, setCorrect] = useState(false);\n\n    const tickle_comp = <React.Fragment>\n                                  <Sound\n                                     url={tickle_spell}\n                                     playStatus={Sound.status.PLAYING}\n                                     autoLoad={true}\n                                     loop={false}\n                                     volume={75} />\n                                  <Sound\n                                     url={tickle}\n                                     playStatus={Sound.status.PLAYING}\n                                     autoLoad={true}\n                                     loop={false}\n                                     volume={50} />\n                                   </React.Fragment>;\n\n    const funny_comp =   <React.Fragment>\n                                 <Sound\n                                    url={funny_spell}\n                                    playStatus={Sound.status.PLAYING}\n                                    autoLoad={true}\n                                    loop={false}\n                                    volume={100} />\n                                 <Sound\n                                    url={funny}\n                                    playStatus={Sound.status.PLAYING}\n                                    autoLoad={true}\n                                    loop={false}\n                                    volume={25} />\n                                  </React.Fragment>;\n\n    const dancing_comp = <React.Fragment>\n                       <Sound\n                          url={dancing_spell}\n                          playStatus={Sound.status.PLAYING}\n                          autoLoad={true}\n                          loop={false}\n                          volume={100} />\n                          <Sound\n                                url={dancing}\n                                playStatus={Sound.status.PLAYING}\n                                autoLoad={true}\n                                loop={false}\n                                volume={25} />\n                     </React.Fragment>;\n\n    const torture_comp = <React.Fragment>\n                        <Sound\n                           url={torture_spell}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={100} />\n                        <Sound\n                           url={torture}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={25} />\n                    </React.Fragment>;\n\n    const handleTickle = () => {\n        console.log(document.activeElement.id);\n       setSound(<RenderReply reply={tickle_reply}/>);\n    }\n\n    const handleDancing= () => {\n        setSound(<RenderReply reply={dancing_reply}/>);\n    }\n\n    const finishedLevel = () => {\n        handleViewChange('level-four');\n    }\n\n    const handleFunny = () => {\n       setSound(<Sound\n                  url={funny_reply}\n                  playStatus={Sound.status.PLAYING}\n                  autoLoad={true}\n                  loop={false}\n                  volume={100}\n                   onFinishedPlaying={finishedLevel}\n                />);\n    }\n\n    const handleTorture = () => {\n        setSound(<RenderReply reply={torture_reply}/>);\n    }\n\n    const handleSpace = () => {\n       let id =  console.log(document.activeElement.id);\n       switch(id) {\n       case \"tickle\":\n         handleTickle();\n       break;\n       case \"funny\":\n       handleFunny();\n       break;\n       case \"dancing\":\n       handleDancing();\n       break;\n       case \"torture\":\n       handleTorture();\n       break;\n       }\n    }\n\n    const handleSelect = (name) => {\n        console.log(name);\n        switch(name) {\n            case -1:\n            setSound(tickle_comp);\n            break;\n            case 4:\n            handleSelect(-1);\n            break;\n            case 1:\n            setSound(funny_comp);\n            break;\n            case 2:\n            setSound(dancing_comp);\n            break;\n            case 3:\n            setSound(torture_comp);\n            break;\n        }\n    }\n\n      const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n           case \"Tab\":\n           handleSelect(document.activeElement.tabIndex)\n           break;\n           case \" \":\n           handleSpace();\n           break;\n           case \"Escape\":\n           props.exit();\n           }\n      }, [props]);\n\n     useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n\n    return (\n      <div id=\"boggart-image\">\n        <div id=\"d-landing\">\n                  <h id=\"h-entrance\" >\n                        Welcome to level three!\n                  </h>\n                  <p id=\"p-landing\">\n                  Ah, you have encountered the boggart, a very mysterious creature! This creature knows all of your deepest, darkest fears and transforms into the thing that you are most afraid of.\n                  There is a special spell that you must use in order to defeat the boggart. Let’s see if you can figure out what spell to use…\n                  </p>\n                  <div id=\"d-options\">\n                       <button id=\"tickle\" tabIndex = \"1\" onClick={handleTickle}> Tickle Spell </button>\n                       <button tabIndex=\"2\" id=\"funny\" onClick={handleFunny}>Funny Spell</button>\n                       <button tabIndex=\"3\" id=\"dancing\" onClick={handleDancing}>Dancing Spell</button>\n                       <button tabIndex=\"4\" id=\"torture\" onClick={handleTorture}>Torture Spell</button>\n                       </div>\n                       {sound}\n          </div>\n      </div>\n    );\n}\n","import React, {useLayoutEffect, useCallback, useState} from 'react';\nimport Sound from 'react-sound';\nimport '../levels.css'\nimport chamber_intro from '../audio/chamber/chamber_intro.m4a';\nimport sort_hat_1 from '../audio/chamber/sorting_hat_1.m4a';\nimport sort_hat_2 from '../audio/chamber/sorting_hat_2.m4a';\nimport sword from '../audio/chamber/sword.m4a';\nimport throw_hat from '../audio/chamber/throw_hat.m4a';\nimport hat_reply from '../audio/chamber/hat_reply.m4a';\nimport powers_reply from '../audio/chamber/powers_reply.m4a';\nimport sword_reply from '../audio/chamber/sword_reply.m4a';\nimport gryffindor_reply from '../audio/chamber/gryffindor_reply.m4a';\nimport snake_hiss from '../audio/chamber/snakehiss2.mp3';\nimport sword_draw from '../audio/chamber/swordraw.mp3';\n\nfunction RenderReply(props) {\n    return (\n        <React.Fragment>\n             <Sound\n               url={props.reply}\n               playStatus={Sound.status.PLAYING}\n               autoLoad={true}\n               loop={false}\n               volume={100}\n              />\n        </React.Fragment>\n    );\n}\n\nexport function Chamber(props) {\n\n    const handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n    const chamberTheme = \"https://ia800103.us.archive.org/33/items/cd_harry-potter-and-the-chamber-of-secrets-or_john-williams/disc1/03.%20John%20Williams%20-%20The%20Chamber%20Of%20Secrets_sample.mp3\";\n\n\n     const intro = <React.Fragment>\n                    <Sound\n                    url={chamber_intro}\n                     playStatus={Sound.status.PLAYING}\n                    autoLoad={true}\n                    loop={false}\n                    volume={75}\n                    />\n                   <Sound\n                    url={chamberTheme}\n                    playStatus={Sound.status.PLAYING}\n                    autoLoad={true}\n                    loop={true}\n                    volume={75}\n                   />\n                   </React.Fragment>;\n\n\n\n\n\n    const[sound, setSound] = useState(intro);\n\n      const sword_comp = <React.Fragment>\n                                      <Sound\n                                         url={sword}\n                                         playStatus={Sound.status.PLAYING}\n                                         autoLoad={true}\n                                         loop={false}\n                                         volume={75} />\n                                       </React.Fragment>;\n\n        const sort_hat_1_comp =   <React.Fragment>\n                                     <Sound\n                                        url={sort_hat_1}\n                                        playStatus={Sound.status.PLAYING}\n                                        autoLoad={true}\n                                        loop={false}\n                                        volume={100} />\n\n                                      </React.Fragment>;\n\n        const sort_hat_2_comp = <React.Fragment>\n                           <Sound\n                              url={sort_hat_2}\n                              playStatus={Sound.status.PLAYING}\n                              autoLoad={true}\n                              loop={false}\n                              volume={100} />\n                         </React.Fragment>;\n\n        const throw_hat_comp = <React.Fragment>\n                            <Sound\n                               url={throw_hat}\n                               playStatus={Sound.status.PLAYING}\n                               autoLoad={true}\n                               loop={false}\n                               volume={100} />\n\n                        </React.Fragment>;\n\n  const finishedLevel = () => {\n            handleViewChange('level-three');\n        }\n\n    const handleSword = () => {\n       setSound(<React.Fragment>\n                  <Sound\n                     url={sword_draw}\n                     playStatus={Sound.status.PLAYING}\n                     autoLoad={true}\n                     loop={false}\n                     volume={75} />\n                <Sound\n                     url={sword_reply}\n                     playStatus={Sound.status.PLAYING}\n                     autoLoad={true}\n                     loop={false}\n                     volume={100}\n                     onFinishedPlaying={finishedLevel}\n                                />\n                </React.Fragment>\n                ); }\n\n    const handleHat= () => {\n       setSound(<RenderReply reply={powers_reply}/>);\n    }\n\n    const handleBasilisk = () => {\n        setSound(<React.Fragment>\n        <Sound\n           url={hat_reply}\n           playStatus={Sound.status.PLAYING}\n           autoLoad={true}\n           loop={false}\n           volume={100} />\n        <Sound\n           url={snake_hiss}\n           playStatus={Sound.status.PLAYING}\n           autoLoad={true}\n           loop={false}\n           volume={75} />\n        </React.Fragment>);\n    }\n\n    const handleGryffindor = () => {\n         setSound(<RenderReply reply={gryffindor_reply}/>)\n    }\n\nconst handleSpace = () => {\n       let id =  console.log(document.activeElement.id);\n       switch(id) {\n       case \"hat\":\n       handleHat();\n       break;\n       case \"sword\":\n       handleSword();\n       break;\n       case \"basilisk\":\n       handleBasilisk();\n       break;\n       case \"gryffindor\":\n       handleGryffindor();\n       break; }}\n\n const handleSelect = (index) => {\n        switch(index) {\n            case -1:\n            setSound(sort_hat_1_comp);\n            break;\n            case 4:\n            handleSelect(-1);\n            break;\n            case 1:\n            setSound(sword_comp);\n            break;\n            case 2:\n            setSound(throw_hat_comp);\n            break;\n            case 3:\n            setSound(sort_hat_2_comp);\n            break;\n        }\n    }\n\n const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n           case \"Tab\":\n           handleSelect(document.activeElement.tabIndex)\n           break;\n           case \" \":\n           handleSpace();\n           break;\n           case \"Escape\":\n           props.exit();\n       }\n      }, [props]);\n\n useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n    return (\n        <div id=\"chamber-image\">\n           <div id=\"d-landing\">\n                          <h id=\"h-entrance\" >\n                                Welcome to Level Two\n                          </h>\n                          <p id=\"p-landing\">\n                            You have entered the chamber of secrets. The monstrous basilisk lurks in the shadows\n                             of the chamber, and if you look the basilisk in the eye, you will be frozen and unable\n                             to move! Your job is to defeat the basilisk. Fawkes the Phoenix has flown into the\n                             chamber and has now blinded the basilisk so that you no longer have to worry about being\n                             frozen! You spot the sorting hat on the ground nearby… what do you do next?\n                          </p>\n                          <div id=\"d-options>\">\n                          <p>\n                          <div id=\"d-options\">\n                          <button id=\"hat\" tabIndex = \"1\" onClick={handleHat}> Put on the sorting hat and hope that it provides you with magical powers!</button>\n                          <button tabIndex=\"2\" id=\"sword\" onClick={handleSword}> Look inside the sorting hat… there’s something shiny in there that might help.</button>\n                          <button tabIndex=\"3\" id=\"basilisk\" onClick={handleBasilisk}> Throw the sorting hat at the basilisk to distract it so that you can run out of the chamber.</button>\n                          <button tabIndex=\"4\" id=\"gryffindor\" onClick={handleGryffindor}> Put on the sorting hat and the power of gryffindor will help you defeat the basilisk.</button>\n                          </div>\n                          </p>\n                          </div>\n                        </div>\n                        {sound}\n        </div>\n        );\n}","import React, {useLayoutEffect, useCallback, useState} from 'react';\nimport Sound from 'react-sound';\nimport instructions from \"../audio/instructions.m4a\";\n\nexport function Instructions(props) {\n\nconst handleViewChange = props.handleViewChange === undefined ? null : props.handleViewChange;\n\n\n const handleKey = useCallback((e) => {\n           var event = window.event ? window.event : e;\n              console.log(event);\n           switch(e.key) {\n           case \" \":\n              handleViewChange('enter');\n           break;\n       }\n      }, [props]);\n\n useLayoutEffect(() => {\n         document.addEventListener(\"keydown\", handleKey);\n               return function cleanup() {\n               document.removeEventListener(\"keydown\", handleKey);\n             };\n       });\n\n\n    return (\n        <div id=\"instructions-image\">\n           <div id=\"d-instructions\">\n                          <h id=\"h-entrance\" >\n                             Game Controls\n                          </h>\n                          <p id=\"p-instructions\">\n                          <p>\n                            The navigation through each level of the maze will be done with the tab and space bar keys. \n                            Each level of the maze will begin with a description of the obstacle\n                            for that maze level, after which you will have the options to hear each option for\n                            how to proceed. <br/>\n                            </p>\n                            <p>\n                            These options can be accessed by tabbing on the keyboard. The tab button will be the second button below the top\n                            left button, or the escape key. After identifying the top left button, move down 2 keys with your finger and you should be\n                            at the tab key.<br/>\n                            </p>\n                            <p>\n                            After hearing an option that you\n                            want to select as the right way to proceed, press the space bar to select that option.\n                            You will then hear a response indicating if you chose the correct option. If it is not correct, continue tabbing and select another option.\n                            </p>\n                            <p>If you are ready to begin, press the space bar.</p>\n                          </p>\n                        </div>\n                        <Sound\n                           url={instructions}\n                           playStatus={Sound.status.PLAYING}\n                           autoLoad={true}\n                           loop={false}\n                           volume={100}\n                        />\n        </div>\n        );\n}","import React, { useState, useLayoutEffect } from 'react';\nimport {Entrance} from './entrance';\nimport {Landing} from './landing';\nimport {DevilsSnare} from './devilsSnare';\nimport { Sphinx } from './sphinx';\nimport { Riddle } from './riddle';\nimport {Prophecy } from \"./prophecy\";\nimport {Ending} from \"./ending\";\nimport { Boggart } from './boggart';\nimport { Chamber } from './chamber';\nimport { Instructions } from './instructions';\n\n\nexport function AppView(props){\n\n    const[view, setView] = useState('instructions');\n    const[viewDisplay, setDisplay] = useState(<Entrance/>);\n\n    const handleViewChange = (view) => {\n        setView(view);\n    };\n\n    const handleExitClick = () => {\n            setView('landing');\n        }\n\n    useLayoutEffect(() => {\n          switch(view) {\n            case 'enter':\n            setDisplay(\n            <Entrance\n            background=\"url('../images/harry_in_maze.jpg')\"\n            handleViewChange={handleViewChange}\n            exit={handleExitClick}\n            />\n            );\n            break;\n            case 'instructions':\n            setDisplay(\n            <Instructions\n            handleViewChange={handleViewChange}\n            />);\n            break;\n            case 'landing':\n            setDisplay(\n            <Landing/>\n            );\n            break;\n            case 'level-one':\n            //future implementations: call randomization function here to determine\n            //which component will be displayed\n           setDisplay(\n            <DevilsSnare\n            background=\"url('../images/devilsSnare.jpg')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'level-two':\n            setDisplay(<Chamber\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />);\n            break;\n            case 'level-three':\n                setDisplay(\n                    <Boggart\n                    background=\"url('../images/boggart.jpg')\"\n                    exit={handleExitClick}\n                    handleViewChange={handleViewChange}\n                    />\n                );\n                break;\n            case 'level-four':\n           setDisplay(\n            <Sphinx\n            background=\"url('../images/Sphinx.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'riddle':\n            setDisplay(\n            <Riddle\n            background=\"url('../images/Sphinx.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );  \n            break;\n            case 'level-five':\n           setDisplay(\n            <Prophecy\n            background=\"url('../images/prophecy.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            case 'ending':\n           setDisplay(\n            <Ending\n            background=\"url('../images/prophecy.png')\"\n            exit={handleExitClick}\n            handleViewChange={handleViewChange}\n            />\n            );\n            break;\n            default:\n            setDisplay(\n            <Entrance background=\"url('../images/harry_in_maze.jpg')\" handleViewChange={handleViewChange}/>\n            );\n          }\n       }, [view]);\n\n    return (\n    <React.Fragment>\n        {viewDisplay}\n    </React.Fragment>\n    );\n}","import React, { useState, useLayoutEffect, useCallback, useEffect } from 'react';\nimport Sound from 'react-sound';\nimport {AppView} from './appView';\nimport '../landing.css';\nimport '../fonts/LUMOS.TTF';\nimport magicSound from '../audio/zapsplat_fantasy_reversed_backwards_magical_glissando_001_46178.mp3';\nimport epicMusic from '../audio/bensound-epic.mp3';\nimport landingInstructions from \"../audio/landing.m4a\";\nimport game_entrance from '../audio/game_entrance.m4a';\n\nfunction Greeting(props) {\n\n    const hpTheme = \"https://ia801309.us.archive.org/28/items/HarryPotter-hedwigTheme/Harry_Potter_Theme_Song_Hedwigs_Theme.mp3\";\n\n    const handleViewChange = props.onClick === undefined ? null : props.onClick;\n\n    const intro = <React.Fragment>\n    <Sound\n      url={hpTheme}\n      playStatus={Sound.status.PLAYING}\n      autoLoad={true}\n      loop={true}\n      volume={75}\n    />\n     <Sound\n      url={game_entrance}\n      playStatus={Sound.status.PLAYING}\n      autoLoad={true}\n      loop={false}\n      volume={50}\n     />\n    </React.Fragment>;\n\n    const handleClick = () => {\n        props.onClick();\n    };\n\n      const handleKey = useCallback((e) => {\n             var event = window.event ? window.event : e;\n                console.log(event);\n             if(e.key === \" \") {\n                     console.log(\"right arrow key pressed\");\n                      handleViewChange(\"enter\");\n                     }\n        }, [props]);\n\n       useLayoutEffect(() => {\n           document.addEventListener(\"keydown\", handleKey);\n                 return function cleanup() {\n                 document.removeEventListener(\"keydown\", handleKey);\n               };\n         });\n    return (\n       <div id=\"landing-image\">\n           <div id=\"d-landing\">\n            <h id=\"h-landing\" >\n                Escape 580\n            </h>\n            <p id=\"p-landing\">\n            Welcome to our game! As a player, you are a student at Hogwarts who is competing in the Triwizard cup.\n            You are about to enter the maze, where you will use your keyboard to navigate through the obstacles of the maze. \n            Press the space bar to begin.\n            </p>\n        </div>\n        {intro}\n    </div>\n    );\n}\n\nexport function Landing(props) {\n\n     const[view, setView] = useState('greetings');\n\n     const handleClick = () => {\n           setView('app-view');\n         };\n\n    const[viewDisplay, setDisplay]= useState(<Greeting onClick={handleClick}/>);\n\n    useLayoutEffect(() => {\n        switch(view) {\n         case 'greetings':\n         setDisplay(<Greeting onClick={handleClick}/>);\n         break;\n         case 'app-view':\n         setDisplay(<AppView/>);\n         break;\n         default:\n         setDisplay(<Greeting onClick={handleClick}/>);\n        }\n    }, [view]);\n\n return (\n    <div id=\"d-container\">\n        {viewDisplay}\n    </div>\n );\n}","import React from 'react';\nimport './App.css';\nimport {Landing} from './components/landing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Landing/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './fonts/LUMOS.TTF';\nimport './fonts/HarryP-MVZ6w.ttf';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}